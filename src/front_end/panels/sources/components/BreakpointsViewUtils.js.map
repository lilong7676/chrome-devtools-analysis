{"version":3,"file":"BreakpointsViewUtils.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/sources/components/BreakpointsViewUtils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../../core/platform/platform.js';\n\nconst SUMMARY_ELEMENT_SELECTOR = 'summary';\n\nconst domNodeIsTree = (domNode: HTMLElement): boolean => {\n  return domNode.getAttribute('role') === 'tree';\n};\n\nconst domNodeIsBreakpointItemNode = (domNode: HTMLElement): boolean => {\n  return domNode.getAttribute('role') === 'treeitem';\n};\n\nconst domNodeIsPauseOnExceptionsNode = (domNode: HTMLElement): boolean => {\n  return domNode.getAttribute('data-first-pause') !== null || domNode.getAttribute('data-last-pause') !== null;\n};\n\nconst domNodeIsSummaryNode = (domNode: HTMLElement): boolean => {\n  return !domNodeIsBreakpointItemNode(domNode);\n};\n\nconst groupIsExpanded = (detailsElement: HTMLDetailsElement): boolean => {\n  return detailsElement.getAttribute('open') !== null;\n};\n\nconst getFirstBreakpointItemInGroup = (detailsElement: HTMLDetailsElement): HTMLElement|null => {\n  return detailsElement.querySelector<HTMLElement>('[data-first-breakpoint]');\n};\n\nconst getLastBreakpointItemInGroup = (detailsElement: HTMLDetailsElement): HTMLElement|null => {\n  return detailsElement.querySelector<HTMLDivElement>('[data-last-breakpoint]');\n};\n\nconst getNextGroupsSummaryNode = (detailsElement: HTMLDetailsElement): HTMLElement|null => {\n  const nextDetailsElement = getNextDetailsElement(detailsElement);\n  if (nextDetailsElement && nextDetailsElement instanceof HTMLDetailsElement) {\n    return nextDetailsElement?.querySelector<HTMLElement>('summary');\n  }\n  return null;\n};\n\nconst getCurrentSummaryNode = (detailsElement: HTMLDetailsElement): HTMLElement|null => {\n  return detailsElement.querySelector<HTMLElement>(SUMMARY_ELEMENT_SELECTOR);\n};\n\nconst getNextDetailsElement = (detailsElement: HTMLDetailsElement): HTMLDetailsElement|null => {\n  const nextDetailsElement = detailsElement.nextElementSibling;\n  if (nextDetailsElement && nextDetailsElement instanceof HTMLDetailsElement) {\n    return nextDetailsElement;\n  }\n  return null;\n};\n\nconst getPreviousDetailsElement = (detailsElement: HTMLDetailsElement): HTMLDetailsElement|null => {\n  const previousDetailsElement = detailsElement.previousElementSibling;\n  if (previousDetailsElement && previousDetailsElement instanceof HTMLDetailsElement) {\n    return previousDetailsElement;\n  }\n  return null;\n};\n\nfunction findNextNodeForPauseOnExceptions(target: HTMLElement, key: Platform.KeyboardUtilities.ArrowKey): HTMLElement|\n    null {\n  // Handle keyboard navigation on one of the pause on exceptions checkboxes.\n  console.assert(domNodeIsPauseOnExceptionsNode(target));\n  let nextNode: HTMLElement|null = null;\n  switch (key) {\n    case Platform.KeyboardUtilities.ArrowKey.UP: {\n      const previousElementSibling = target.previousElementSibling;\n      if (previousElementSibling instanceof HTMLElement) {\n        nextNode = previousElementSibling;\n        console.assert(domNodeIsPauseOnExceptionsNode(nextNode));\n      }\n      break;\n    }\n    case Platform.KeyboardUtilities.ArrowKey.DOWN: {\n      const nextElementSibling = target.nextElementSibling;\n      if (nextElementSibling instanceof HTMLElement) {\n        if (domNodeIsTree(nextElementSibling)) {\n          const detailsElement = nextElementSibling.querySelector<HTMLDetailsElement>('[data-first-group]');\n          if (detailsElement) {\n            nextNode = getCurrentSummaryNode(detailsElement);\n          }\n        } else {\n          nextNode = nextElementSibling;\n          console.assert(domNodeIsPauseOnExceptionsNode(nextNode));\n        }\n      }\n      break;\n    }\n    default:\n      break;\n  }\n\n  return nextNode;\n}\n\nexport async function findNextNodeForKeyboardNavigation(\n    target: HTMLElement, key: Platform.KeyboardUtilities.ArrowKey,\n    setGroupExpandedStateCallback: (detailsElement: HTMLDetailsElement, expanded: boolean) =>\n        Promise<unknown>): Promise<HTMLElement|null> {\n  if (domNodeIsPauseOnExceptionsNode(target)) {\n    return findNextNodeForPauseOnExceptions(target, key);\n  }\n\n  // Handle keyboard navigation in the breakpoint tree.\n  const detailsElement = target.parentElement;\n  if (!detailsElement || !(detailsElement instanceof HTMLDetailsElement)) {\n    throw new Error('The selected nodes should be direct children of an HTMLDetails element.');\n  }\n\n  let nextNode: HTMLElement|null = null;\n  switch (key) {\n    case Platform.KeyboardUtilities.ArrowKey.LEFT: {\n      if (domNodeIsSummaryNode(target)) {\n        // On a summary node, collapse if group is expanded.\n        if (groupIsExpanded(detailsElement)) {\n          await setGroupExpandedStateCallback(detailsElement, false);\n        }\n      } else {\n        // On a breakpoint item node, navigate up to the summary node.\n        return getCurrentSummaryNode(detailsElement);\n      }\n      break;\n    }\n    case Platform.KeyboardUtilities.ArrowKey.RIGHT: {\n      if (domNodeIsSummaryNode(target)) {\n        // On a summary node, expand if group is collapsed, and otherwise navigate\n        // to the first breakpoint item in this group.\n        if (groupIsExpanded(detailsElement)) {\n          return getFirstBreakpointItemInGroup(detailsElement);\n        }\n        await setGroupExpandedStateCallback(detailsElement, true);\n      }\n      break;\n    }\n    case Platform.KeyboardUtilities.ArrowKey.DOWN: {\n      if (domNodeIsSummaryNode(target)) {\n        if (groupIsExpanded(detailsElement)) {\n          // If the current node is a summary node of an expanded group, navigating down\n          // should lead to the first breakpoint item within the group.\n          nextNode = getFirstBreakpointItemInGroup(detailsElement);\n        } else {\n          // If the current node is a summary node of a collapsed group, go to the next\n          // group's summary node if existent.\n          nextNode = getNextGroupsSummaryNode(detailsElement);\n        }\n      } else {\n        // If the current node is a breakpoint item, try to get the next\n        // breakpoint item if available, otherwise the next group's summary\n        // node.\n        const nextSibling = target.nextElementSibling;\n        if (nextSibling && nextSibling instanceof HTMLDivElement) {\n          nextNode = nextSibling;\n        } else {\n          nextNode = getNextGroupsSummaryNode(detailsElement);\n        }\n      }\n      break;\n    }\n    case Platform.KeyboardUtilities.ArrowKey.UP: {\n      // If the current node is a summary node, navigating upwards will either\n      // navigate to the last breakpoint item of the previous group (if expanded),\n      // and otherwise navigate to the previous group's summary node.\n      if (domNodeIsSummaryNode(target)) {\n        const previousDetailsElement = getPreviousDetailsElement(detailsElement);\n        if (previousDetailsElement) {\n          if (groupIsExpanded(previousDetailsElement)) {\n            nextNode = getLastBreakpointItemInGroup(previousDetailsElement);\n          } else {\n            nextNode = getCurrentSummaryNode(previousDetailsElement);\n          }\n        } else {\n          const pauseOnExceptions = detailsElement.parentElement?.previousElementSibling;\n          if (pauseOnExceptions instanceof HTMLElement) {\n            nextNode = pauseOnExceptions;\n          }\n        }\n      } else {\n        // If the current node is a breakpoint item, going up should get\n        // the previous sibling, which can be both a summary node or a\n        // a breakpoint item.\n        const previousSibling = target.previousElementSibling;\n        if (previousSibling instanceof HTMLElement) {\n          nextNode = previousSibling;\n        }\n      }\n      break;\n    }\n  }\n  return nextNode;\n}\n"]}