{"version":3,"file":"PreloadingView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/application/preloading/PreloadingView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as DataGrid from '../../../ui/components/data_grid/data_grid.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\n\nimport * as PreloadingComponents from './components/components.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport emptyWidgetStyles from '../../../ui/legacy/emptyWidget.css.js';\nimport preloadingViewStyles from './preloadingView.css.js';\n\ntype PreloadingId = SDK.PrerenderingModel.PreloadingId;\ntype PrerenderingAttempt = SDK.PrerenderingModel.PrerenderingAttempt;\ntype PrerenderingAttemptWithId = SDK.PrerenderingModel.PrerenderingAttemptWithId;\n\nconst UIStrings = {\n  /**\n   *@description Text to clear content\n   */\n  clearNotOngoing: 'Clear not ongoing',\n  /**\n   *@description Text in grid and details\n   */\n  statusPrerendering: 'Prerendering',\n  /**\n   *@description Text in grid and details\n   */\n  statusActivated: 'Activated',\n  /**\n   *@description Text in grid and details\n   */\n  statusDiscarded: 'Discarded',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/preloading/PreloadingView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nclass PrerenderingUIUtils {\n  static trigger(x: PrerenderingAttempt): string {\n    switch (x.trigger.kind) {\n      case 'PrerenderingTriggerSpecRules':\n        return i18n.i18n.lockedString('Speculation Rules');\n      case 'PrerenderingTriggerDUI':\n        return i18n.i18n.lockedString('Direct User Input');\n      case 'PrerenderingTriggerDSE':\n        return i18n.i18n.lockedString('Default Search Engine');\n      case 'PrerenderingTriggerOpaque':\n        return i18n.i18n.lockedString('Opaque');\n    }\n  }\n\n  static status(x: PrerenderingAttempt): string {\n    switch (x.status) {\n      case SDK.PrerenderingModel.PrerenderingStatus.Prerendering:\n        return i18nString(UIStrings.statusPrerendering);\n      case SDK.PrerenderingModel.PrerenderingStatus.Activated:\n        return i18nString(UIStrings.statusActivated);\n      case SDK.PrerenderingModel.PrerenderingStatus.Discarded:\n        return i18nString(UIStrings.statusDiscarded);\n    }\n  }\n}\n\nexport class PreloadingView extends UI.Widget.VBox {\n  private readonly model: SDK.PrerenderingModel.PrerenderingModel;\n  private focused: PreloadingId|null = null;\n\n  private readonly toolbar: UI.Toolbar.Toolbar;\n  private readonly splitWidget: UI.SplitWidget.SplitWidget;\n  private readonly grid = new PreloadingComponents.PreloadingGrid.PreloadingGrid();\n  private readonly bottomContainer: UI.Widget.VBox;\n  private details = new PreloadingComponents.PreloadingDetailsReportView.PreloadingDetailsReportView();\n\n  constructor(model: SDK.PrerenderingModel.PrerenderingModel) {\n    super(/* isWebComponent */ true, /* delegatesFocus */ false);\n\n    this.model = model;\n    this.model.addEventListener(SDK.PrerenderingModel.Events.PrerenderingAttemptStarted, this.onModelUpdated, this);\n    this.model.addEventListener(SDK.PrerenderingModel.Events.PrerenderingAttemptUpdated, this.onModelUpdated, this);\n    this.model.addEventListener(SDK.PrerenderingModel.Events.PrerenderingAttemptsRemoved, this.onModelUpdated, this);\n\n    // this (VBox)\n    //   +- toolbar (| [clear] |)\n    //   +- splitWidget\n    //        +- topContainer\n    //             +- PreloadingGrid\n    //        +- bottomContainer\n    //             +- PreloadingDetailsReportView\n    //\n    // - If an row selected, PreloadingDetailsReportView shows details of it.\n    // - If not, PreloadingDetailsReportView shows some messages.\n\n    this.toolbar = new UI.Toolbar.Toolbar('preloading-toolbar', this.contentElement);\n\n    const clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearNotOngoing), 'largeicon-clear');\n    clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.onClearNotOngoing, this);\n    this.toolbar.appendToolbarItem(clearButton);\n\n    this.toolbar.appendSeparator();\n\n    const topContainer = new UI.Widget.VBox();\n    topContainer.setMinimumSize(0, 40);\n    this.bottomContainer = new UI.Widget.VBox();\n    this.bottomContainer.setMinimumSize(0, 80);\n    this.splitWidget = new UI.SplitWidget.SplitWidget(\n        /* isVertical */ false,\n        /* secondIsSidebar */ true,\n        /* settingName */ undefined,\n        /* defaultSidebarWidth */ undefined,\n        /* defaultSidebarHeight */ 500,\n        /* constraintsInDip */ undefined,\n    );\n    this.splitWidget.setMainWidget(topContainer);\n    this.splitWidget.setSidebarWidget(this.bottomContainer);\n\n    this.grid.addEventListener('cellfocused', this.onCellFocused.bind(this));\n    topContainer.contentElement.appendChild(this.grid);\n    this.bottomContainer.contentElement.appendChild(this.details);\n  }\n\n  wasShown(): void {\n    super.wasShown();\n\n    this.registerCSSFiles([emptyWidgetStyles, preloadingViewStyles]);\n\n    this.splitWidget.show(this.contentElement);\n\n    this.onModelUpdated();\n  }\n\n  private updateDetails(): void {\n    this.details.data = this.focused === null ? null : this.model.getById(this.focused);\n  }\n\n  private onModelUpdated(): void {\n    // Update grid\n    const rows = this.model.getAll().map(\n        ({id, attempt}: PrerenderingAttemptWithId): PreloadingComponents.PreloadingGrid.PreloadingGridRow => {\n          return {\n            id,\n            startedAt: new Date(attempt.startedAt).toLocaleString(),\n            type: i18n.i18n.lockedString('Prerendering'),\n            trigger: PrerenderingUIUtils.trigger(attempt),\n            url: attempt.url,\n            status: PrerenderingUIUtils.status(attempt),\n          };\n        });\n    this.grid.update(rows);\n\n    this.updateDetails();\n  }\n\n  private onCellFocused(event: Event): void {\n    const focusedEvent = event as DataGrid.DataGridEvents.BodyCellFocusedEvent;\n    this.focused = focusedEvent.data.row.cells.find(cell => cell.columnId === 'id')?.value as PreloadingId;\n    this.updateDetails();\n  }\n\n  private onClearNotOngoing(): void {\n    this.model.clearNotOngoing();\n  }\n\n  getGridForTest(): PreloadingComponents.PreloadingGrid.PreloadingGrid {\n    return this.grid;\n  }\n\n  getDetailsForTest(): PreloadingComponents.PreloadingDetailsReportView.PreloadingDetailsReportView {\n    return this.details;\n  }\n}\n"]}