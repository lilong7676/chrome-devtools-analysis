{"version":3,"file":"Color.js","sourceRoot":"","sources":["../../../../../../front_end/core/common/Color.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2009 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Platform from '../platform/platform.js';\n\nimport {ColorConverter} from './ColorConverter.js';\nimport {\n  blendColors,\n  contrastRatioAPCA,\n  desiredLuminanceAPCA,\n  luminance,\n  luminanceAPCA,\n  rgbaToHsla,\n  rgbaToHwba,\n} from './ColorUtils.js';\n\n// Parses angle in the form of\n// `<angle>deg`, `<angle>turn`, `<angle>grad and `<angle>rad`\n// and returns the canonicalized `degree`.\nfunction parseAngle(angleText: string): number|null {\n  const angle = angleText.replace(/(deg|g?rad|turn)$/, '');\n  // @ts-ignore: isNaN can accept strings\n  if (isNaN(angle) || angleText.match(/\\s+(deg|g?rad|turn)/)) {\n    return null;\n  }\n\n  const number = parseFloat(angle);\n  if (angleText.includes('turn')) {\n    // 1turn === 360deg\n    return number * 360;\n  }\n\n  if (angleText.includes('grad')) {\n    // 1grad === 0.9deg\n    return number * 9 / 10;\n  }\n\n  if (angleText.includes('rad')) {\n    // πrad === 180deg\n    return number * 180 / Math.PI;\n  }\n\n  // 1deg === 1deg ^_^\n  return number;\n}\n\n// Returns the `Format` equivalent from the format text\nexport function getFormat(formatText: string): Format|null {\n  switch (formatText) {\n    case Format.Nickname:\n      return Format.Nickname;\n    case Format.HEX:\n      return Format.HEX;\n    case Format.ShortHEX:\n      return Format.ShortHEX;\n    case Format.HEXA:\n      return Format.HEXA;\n    case Format.ShortHEXA:\n      return Format.ShortHEXA;\n    case Format.RGB:\n      return Format.RGB;\n    case Format.RGBA:\n      return Format.RGBA;\n    case Format.HSL:\n      return Format.HSL;\n    case Format.HSLA:\n      return Format.HSLA;\n    case Format.HWB:\n      return Format.HWB;\n    case Format.HWBA:\n      return Format.HWBA;\n    case Format.LCH:\n      return Format.LCH;\n    case Format.OKLCH:\n      return Format.OKLCH;\n    case Format.LAB:\n      return Format.LAB;\n    case Format.OKLAB:\n      return Format.OKLAB;\n  }\n\n  return getColorSpace(formatText);\n}\n\n// Returns the `ColorSpace` equivalent from the color space text\ntype ColorSpace = Format.SRGB|Format.SRGB_LINEAR|Format.DISPLAY_P3|Format.A98_RGB|Format.PROPHOTO_RGB|\n                  Format.REC_2020|Format.XYZ|Format.XYZ_D50|Format.XYZ_D65;\nfunction getColorSpace(colorSpaceText: string): ColorSpace|null {\n  switch (colorSpaceText) {\n    case Format.SRGB:\n      return Format.SRGB;\n    case Format.SRGB_LINEAR:\n      return Format.SRGB_LINEAR;\n    case Format.DISPLAY_P3:\n      return Format.DISPLAY_P3;\n    case Format.A98_RGB:\n      return Format.A98_RGB;\n    case Format.PROPHOTO_RGB:\n      return Format.PROPHOTO_RGB;\n    case Format.REC_2020:\n      return Format.REC_2020;\n    case Format.XYZ:\n      return Format.XYZ;\n    case Format.XYZ_D50:\n      return Format.XYZ_D50;\n    case Format.XYZ_D65:\n      return Format.XYZ_D65;\n  }\n\n  return null;\n}\n\n/**\n * Percents in color spaces are mapped to ranges.\n * These ranges change based on the syntax.\n * For example, for 'C' in lch() c: 0% = 0, 100% = 150.\n * See: https://www.w3.org/TR/css-color-4/#funcdef-lch\n * Some percentage values can be negative\n * though their ranges don't change depending on the sign\n * (for now, according to spec).\n * @param percent % value of the number. 42 for 42%.\n * @param range Range of [min, max]. Including `min` and `max`.\n */\nfunction mapPercentToRange(percent: number, range: [number, number]): number {\n  const sign = Math.sign(percent);\n  const absPercent = Math.abs(percent);\n  const [outMin, outMax] = range;\n\n  return sign * (absPercent * (outMax - outMin) / 100 + outMin);\n}\n\n/**\n * Parses given `color()` function definition and returns the `Color` object.\n * We want to special case its parsing here because it's a bit different\n * than other color functions: rgb, lch etc. accepts 3 arguments with\n * optional alpha. This accepts 4 arguments with optional alpha.\n *\n * Instead of making `splitColorFunctionParameters` work for this case too\n * I've decided to implement it specifically.\n * @param originalText Original definition of the color with `color`\n * @param parametersText Inside of the `color()` function. ex, `display-p3 0.1 0.2 0.3 / 0%`\n * @returns `Color` object\n */\nfunction parseColorFunction(originalText: string, parametersText: string): Color|null {\n  const parameters = parametersText.trim().split(/\\s+/);\n  const [colorSpaceText, ...remainingParams] = parameters;\n  const colorSpace = getColorSpace(colorSpaceText);\n  // Color space is not known to us, do not parse the Color.\n  if (!colorSpace) {\n    return null;\n  }\n\n  // `color(<color-space>)` is a valid syntax\n  if (remainingParams.length === 0) {\n    return new ColorFunction(colorSpace, [0, 0, 0, null], originalText);\n  }\n\n  // Check if it contains `/ <alpha>` part, if so, it should be at the end\n  const alphaSeparatorIndex = remainingParams.indexOf('/');\n  const containsAlpha = alphaSeparatorIndex !== -1;\n  if (containsAlpha && alphaSeparatorIndex !== remainingParams.length - 2) {\n    // Invalid syntax: like `color(<space> / <alpha> <number>)`\n    return null;\n  }\n\n  if (containsAlpha) {\n    // Since we know that the last value is <alpha>\n    // we can safely remove the alpha separator\n    // and only leave the numbers (if given correctly)\n    remainingParams.splice(alphaSeparatorIndex, 1);\n  }\n\n  // `color` cannot contain more than 4 parameters when there is alpha\n  // and cannot contain more than 3 parameters when there isn't alpha\n  const maxLength = containsAlpha ? 4 : 3;\n  if (remainingParams.length > maxLength) {\n    return null;\n  }\n\n  // Replace `none`s with 0s\n  const nonesReplacesParams = remainingParams.map(param => param === 'none' ? '0' : param);\n\n  // At this point, we know that all the values are there so we can\n  // safely try to parse all the values as number or percentage\n  const values = nonesReplacesParams.map(param => parsePercentOrNumber(param, [0, 1]));\n  const containsNull = values.includes(null);\n  // At least one value is malformatted (not a number or percentage)\n  if (containsNull) {\n    return null;\n  }\n\n  let alphaValue = 1;\n  if (containsAlpha) {\n    // We know that `alphaValue` exists at this point.\n    // See the above lines for deciding on `containsAlpha`.\n    alphaValue = values[values.length - 1] as number;\n    // We get rid of the `alpha` from the list\n    // so that all the values map to `r, g, b` from the start\n    values.pop();\n  }\n\n  // Depending on the color space\n  // this either reflects `rgb` parameters in that color space\n  // or `xyz` parameters in the given `xyz` space.\n  const rgbOrXyza: [number, number, number, number] = [\n    values[0] ?? 0,\n    values[1] ?? 0,\n    values[2] ?? 0,\n    alphaValue,\n  ];\n\n  return new ColorFunction(colorSpace, rgbOrXyza, originalText);\n}\n\ninterface SplitColorFunctionParametersOptions {\n  allowCommas: boolean;\n  convertNoneToZero: boolean;\n}\n\nexport function parse(text: string): Color|null {\n  // Simple - #hex, nickname\n  const value = text.toLowerCase().replace(/\\s+/g, '');\n  const simple = /^(?:#([0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})|(\\w+))$/i;\n  let match = value.match(simple);\n  if (match) {\n    if (match[1]) {\n      return Legacy.fromHex(match[1], text);\n    }\n\n    if (match[2]) {\n      return Legacy.fromName(match[2], text);\n    }\n\n    return null;\n  }\n\n  // rgb/rgba(), hsl/hsla(), hwb/hwba(), lch(), oklch(), lab(), oklab() and color()\n  match = text.toLowerCase().match(/^\\s*(?:(rgba?)|(hsla?)|(hwba?)|(lch)|(oklch)|(lab)|(oklab)|(color))\\((.*)\\)\\s*$/);\n  if (match) {\n    const isRgbaMatch = Boolean(match[1]);   // rgb/rgba()\n    const isHslaMatch = Boolean(match[2]);   // hsl/hsla()\n    const isHwbaMatch = Boolean(match[3]);   // hwb/hwba()\n    const isLchMatch = Boolean(match[4]);    // lch()\n    const isOklchMatch = Boolean(match[5]);  // oklch()\n    const isLabMatch = Boolean(match[6]);    // lab()\n    const isOklabMatch = Boolean(match[7]);  // oklab()\n    const isColorMatch = Boolean(match[8]);  // color()\n    const valuesText = match[9];\n\n    // Parse color function first because extracting values for\n    // this function is not the same as the other ones\n    // so, we're not using any of the logic below.\n    if (isColorMatch) {\n      return parseColorFunction(text, valuesText);\n    }\n\n    const isOldSyntax = isRgbaMatch || isHslaMatch || isHwbaMatch;\n    const allowCommas = isRgbaMatch || isHslaMatch;\n    const convertNoneToZero = !isOldSyntax;  // Convert 'none' keyword to zero in new syntaxes\n\n    const values = splitColorFunctionParameters(valuesText, {allowCommas, convertNoneToZero});\n    if (!values) {\n      return null;\n    }\n    const spec: ColorParameterSpec = [values[0], values[1], values[2], values[3]];\n    if (isRgbaMatch) {\n      return Legacy.fromRGBAFunction(values[0], values[1], values[2], values[3], text);\n    }\n\n    if (isHslaMatch) {\n      return Legacy.fromHSLA(values[0], values[1], values[2], values[3], text);\n    }\n\n    if (isHwbaMatch) {\n      return Legacy.fromHWB(values[0], values[1], values[2], values[3], text);\n    }\n\n    if (isLchMatch) {\n      return LCH.fromSpec(spec, text);\n    }\n\n    if (isOklchMatch) {\n      return Oklch.fromSpec(spec, text);\n    }\n\n    if (isLabMatch) {\n      return Lab.fromSpec(spec, text);\n    }\n\n    if (isOklabMatch) {\n      return Oklab.fromSpec(spec, text);\n    }\n  }\n\n  return null;\n}\n\n/**\n * Split the color parameters of (e.g.) rgb(a), hsl(a), hwb(a) functions.\n */\nfunction splitColorFunctionParameters(\n    content: string, {allowCommas, convertNoneToZero}: SplitColorFunctionParametersOptions): string[]|null {\n  const components = content.trim();\n  let values: string[] = [];\n\n  if (allowCommas) {\n    values = components.split(/\\s*,\\s*/);\n  }\n  if (!allowCommas || values.length === 1) {\n    values = components.split(/\\s+/);\n    if (values[3] === '/') {\n      values.splice(3, 1);\n      if (values.length !== 4) {\n        return null;\n      }\n    } else if (\n        (values.length > 2 && values[2].indexOf('/') !== -1) || (values.length > 3 && values[3].indexOf('/') !== -1)) {\n      const alpha = values.slice(2, 4).join('');\n      values = values.slice(0, 2).concat(alpha.split(/\\//)).concat(values.slice(4));\n    } else if (values.length >= 4) {\n      return null;\n    }\n  }\n  if (values.length !== 3 && values.length !== 4 || values.indexOf('') > -1) {\n    return null;\n  }\n\n  // Question: what should we do with `alpha` being none?\n  if (convertNoneToZero) {\n    return values.map(value => value === 'none' ? '0' : value);\n  }\n\n  return values;\n}\n\nfunction clamp(value: number, {min, max}: {min?: number, max?: number}): number;\nfunction clamp(value: null, {min, max}: {min?: number, max?: number}): null;\nfunction clamp(value: number|null, {min, max}: {min?: number, max?: number}): number|null;\nfunction clamp(value: number|null, {min, max}: {min?: number, max?: number}): number|null {\n  if (value === null) {\n    return value;\n  }\n  if (min) {\n    value = Math.max(value, min);\n  }\n  if (max) {\n    value = Math.min(value, max);\n  }\n  return value;\n}\n\nfunction parsePercentage(value: string, range: [number, number]): number|null {\n  if (!value.endsWith('%')) {\n    return null;\n  }\n  const percentage = parseFloat(value.substr(0, value.length - 1));\n  return isNaN(percentage) ? null : mapPercentToRange(percentage, range);\n}\n\nfunction parseNumber(value: string): number|null {\n  const number = parseFloat(value);\n  return isNaN(number) ? null : number;\n}\n\nfunction parseAlpha(value: string|undefined): number|null {\n  if (value === undefined) {\n    return null;\n  }\n  return clamp(parsePercentage(value, [0, 1]) ?? parseNumber(value), {min: 0, max: 1});\n}\n\n/**\n *\n * @param value Text value to be parsed in the form of 'number|percentage'.\n * @param range Range to map the percentage.\n * @returns If it is not percentage, returns number directly; otherwise,\n * maps the percentage to the range. For example:\n * - 30% in range [0, 100] is 30\n * - 20% in range [0, 1] is 0.5\n */\nfunction parsePercentOrNumber(value: string, range: [number, number] = [0, 1]): number|null {\n  // @ts-ignore: isNaN can accept strings\n  if (isNaN(value.replace('%', ''))) {\n    return null;\n  }\n  const parsed = parseFloat(value);\n\n  if (value.indexOf('%') !== -1) {\n    if (value.indexOf('%') !== value.length - 1) {\n      return null;\n    }\n    return mapPercentToRange(parsed, range);\n  }\n  return parsed;\n}\n\nfunction parseRgbNumeric(value: string): number|null {\n  const parsed = parsePercentOrNumber(value);\n  if (parsed === null) {\n    return null;\n  }\n\n  if (value.indexOf('%') !== -1) {\n    return parsed;\n  }\n  return parsed / 255;\n}\n\nfunction parseHueNumeric(value: string): number|null {\n  const angle = value.replace(/(deg|g?rad|turn)$/, '');\n  // @ts-ignore: isNaN can accept strings\n  if (isNaN(angle) || value.match(/\\s+(deg|g?rad|turn)/)) {\n    return null;\n  }\n  const number = parseFloat(angle);\n\n  if (value.indexOf('turn') !== -1) {\n    return number % 1;\n  }\n  if (value.indexOf('grad') !== -1) {\n    return (number / 400) % 1;\n  }\n  if (value.indexOf('rad') !== -1) {\n    return (number / (2 * Math.PI)) % 1;\n  }\n  return (number / 360) % 1;\n}\n\nfunction parseSatLightNumeric(value: string): number|null {\n  // @ts-ignore: isNaN can accept strings\n  if (value.indexOf('%') !== value.length - 1 || isNaN(value.replace('%', ''))) {\n    return null;\n  }\n  const parsed = parseFloat(value);\n  return Math.min(1, parsed / 100);\n}\n\nfunction parseAlphaNumeric(value: string): number|null {\n  return parsePercentOrNumber(value);\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction hsva2hsla(hsva: number[], out_hsla: number[]): void {\n  const h = hsva[0];\n  let s: 0|number = hsva[1];\n  const v = hsva[2];\n\n  const t = (2 - s) * v;\n  if (v === 0 || s === 0) {\n    s = 0;\n  } else {\n    s *= v / (t < 1 ? t : 2 - t);\n  }\n\n  out_hsla[0] = h;\n  out_hsla[1] = s;\n  out_hsla[2] = t / 2;\n  out_hsla[3] = hsva[3];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function hsl2rgb(hsl: number[], out_rgb: number[]): void {\n  const h = hsl[0];\n  let s: 0|number = hsl[1];\n  const l = hsl[2];\n\n  function hue2rgb(p: number, q: number, h: number): number {\n    if (h < 0) {\n      h += 1;\n    } else if (h > 1) {\n      h -= 1;\n    }\n\n    if ((h * 6) < 1) {\n      return p + (q - p) * h * 6;\n    }\n    if ((h * 2) < 1) {\n      return q;\n    }\n    if ((h * 3) < 2) {\n      return p + (q - p) * ((2 / 3) - h) * 6;\n    }\n    return p;\n  }\n\n  if (s < 0) {\n    s = 0;\n  }\n\n  let q;\n  if (l <= 0.5) {\n    q = l * (1 + s);\n  } else {\n    q = l + s - (l * s);\n  }\n\n  const p = 2 * l - q;\n\n  const tr = h + (1 / 3);\n  const tg = h;\n  const tb = h - (1 / 3);\n\n  out_rgb[0] = hue2rgb(p, q, tr);\n  out_rgb[1] = hue2rgb(p, q, tg);\n  out_rgb[2] = hue2rgb(p, q, tb);\n  out_rgb[3] = hsl[3];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction hwb2rgb(hwb: number[], out_rgb: number[]): void {\n  const h = hwb[0];\n  const w = hwb[1];\n  const b = hwb[2];\n\n  if (w + b >= 1) {\n    out_rgb[0] = out_rgb[1] = out_rgb[2] = w / (w + b);\n    out_rgb[3] = hwb[3];\n  } else {\n    hsl2rgb([h, 1, 0.5, hwb[3]], out_rgb);\n    for (let i = 0; i < 3; ++i) {\n      out_rgb[i] += w - (w + b) * out_rgb[i];\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function hsva2rgba(hsva: number[], out_rgba: number[]): void {\n  const tmpHSLA = [0, 0, 0, 0];\n  hsva2hsla(hsva, tmpHSLA);\n  hsl2rgb(tmpHSLA, out_rgba);\n}\n\n/**\n * Compute a desired luminance given a given luminance and a desired contrast\n * ratio.\n */\nexport function desiredLuminance(luminance: number, contrast: number, lighter: boolean): number {\n  function computeLuminance(): number {\n    if (lighter) {\n      return (luminance + 0.05) * contrast - 0.05;\n    }\n    return (luminance + 0.05) / contrast - 0.05;\n  }\n  let desiredLuminance = computeLuminance();\n  if (desiredLuminance < 0 || desiredLuminance > 1) {\n    lighter = !lighter;\n    desiredLuminance = computeLuminance();\n  }\n  return desiredLuminance;\n}\n\n/**\n * Approach a value of the given component of `candidateHSVA` such that the\n * calculated luminance of `candidateHSVA` approximates `desiredLuminance`.\n */\nexport function approachColorValue(\n    candidateHSVA: number[], bgRGBA: number[], index: number, desiredLuminance: number,\n    candidateLuminance: (arg0: Array<number>) => number): number|null {\n  const epsilon = 0.0002;\n\n  let x = candidateHSVA[index];\n  let multiplier = 1;\n  let dLuminance: number = candidateLuminance(candidateHSVA) - desiredLuminance;\n  let previousSign = Math.sign(dLuminance);\n\n  for (let guard = 100; guard; guard--) {\n    if (Math.abs(dLuminance) < epsilon) {\n      candidateHSVA[index] = x;\n      return x;\n    }\n\n    const sign = Math.sign(dLuminance);\n    if (sign !== previousSign) {\n      // If `x` overshoots the correct value, halve the step size.\n      multiplier /= 2;\n      previousSign = sign;\n    } else if (x < 0 || x > 1) {\n      // If there is no overshoot and `x` is out of bounds, there is no\n      // acceptable value for `x`.\n      return null;\n    }\n\n    // Adjust `x` by a multiple of `dLuminance` to decrease step size as\n    // the computed luminance converges on `desiredLuminance`.\n    x += multiplier * (index === 2 ? -dLuminance : dLuminance);\n\n    candidateHSVA[index] = x;\n\n    dLuminance = candidateLuminance(candidateHSVA) - desiredLuminance;\n  }\n\n  return null;\n}\n\nexport function findFgColorForContrast(fgColor: Legacy, bgColor: Legacy, requiredContrast: number): Legacy|null {\n  const candidateHSVA = fgColor.hsva();\n  const bgRGBA = bgColor.rgba();\n\n  const candidateLuminance = (candidateHSVA: number[]): number => {\n    return luminance(blendColors(Legacy.fromHSVA(candidateHSVA).rgba(), bgRGBA));\n  };\n\n  const bgLuminance = luminance(bgColor.rgba());\n  const fgLuminance = candidateLuminance(candidateHSVA);\n  const fgIsLighter = fgLuminance > bgLuminance;\n\n  const desired = desiredLuminance(bgLuminance, requiredContrast, fgIsLighter);\n\n  const saturationComponentIndex = 1;\n  const valueComponentIndex = 2;\n\n  if (approachColorValue(candidateHSVA, bgRGBA, valueComponentIndex, desired, candidateLuminance)) {\n    return Legacy.fromHSVA(candidateHSVA);\n  }\n\n  candidateHSVA[valueComponentIndex] = 1;\n  if (approachColorValue(candidateHSVA, bgRGBA, saturationComponentIndex, desired, candidateLuminance)) {\n    return Legacy.fromHSVA(candidateHSVA);\n  }\n\n  return null;\n}\n\nexport function findFgColorForContrastAPCA(fgColor: Legacy, bgColor: Legacy, requiredContrast: number): Legacy|null {\n  const candidateHSVA = fgColor.hsva();\n  const bgRGBA = bgColor.rgba();\n\n  const candidateLuminance = (candidateHSVA: number[]): number => {\n    return luminanceAPCA(Legacy.fromHSVA(candidateHSVA).rgba());\n  };\n\n  const bgLuminance = luminanceAPCA(bgColor.rgba());\n  const fgLuminance = candidateLuminance(candidateHSVA);\n  const fgIsLighter = fgLuminance >= bgLuminance;\n  const desiredLuminance = desiredLuminanceAPCA(bgLuminance, requiredContrast, fgIsLighter);\n\n  const saturationComponentIndex = 1;\n  const valueComponentIndex = 2;\n\n  if (approachColorValue(candidateHSVA, bgRGBA, valueComponentIndex, desiredLuminance, candidateLuminance)) {\n    const candidate = Legacy.fromHSVA(candidateHSVA);\n    if (Math.abs(contrastRatioAPCA(bgColor.rgba(), candidate.rgba())) >= requiredContrast) {\n      return candidate;\n    }\n  }\n\n  candidateHSVA[valueComponentIndex] = 1;\n  if (approachColorValue(candidateHSVA, bgRGBA, saturationComponentIndex, desiredLuminance, candidateLuminance)) {\n    const candidate = Legacy.fromHSVA(candidateHSVA);\n    if (Math.abs(contrastRatioAPCA(bgColor.rgba(), candidate.rgba())) >= requiredContrast) {\n      return candidate;\n    }\n  }\n\n  return null;\n}\n\ntype ColorParameterSpec = [string, string, string, string | undefined];\n\ninterface ColorConversions {\n  [Format.Nickname](): Legacy;\n  [Format.HEX](): Legacy;\n  [Format.ShortHEX](): Legacy;\n  [Format.HEXA](): Legacy;\n  [Format.ShortHEXA](): Legacy;\n  [Format.RGB](): Legacy;\n  [Format.RGBA](): Legacy;\n  [Format.HSL](): Legacy;\n  [Format.HSLA](): Legacy;\n  [Format.HWB](): Legacy;\n  [Format.HWBA](): Legacy;\n  [Format.LCH](): LCH;\n  [Format.OKLCH](): Oklch;\n  [Format.LAB](): Lab;\n  [Format.OKLAB](): Oklab;\n\n  [Format.SRGB](): ColorFunction;\n  [Format.SRGB_LINEAR](): ColorFunction;\n  [Format.DISPLAY_P3](): ColorFunction;\n  [Format.A98_RGB](): ColorFunction;\n  [Format.PROPHOTO_RGB](): ColorFunction;\n  [Format.REC_2020](): ColorFunction;\n  [Format.XYZ](): ColorFunction;\n  [Format.XYZ_D50](): ColorFunction;\n  [Format.XYZ_D65](): ColorFunction;\n}\n\nexport interface Color {\n  equal(color: Color): boolean;\n  asString(format?: Format): string|null;\n  setAlpha(alpha: number): Color;\n  format(): Format;\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]>;\n  asLegacyColor(): Legacy;\n}\n\nfunction stringifyWithPrecision(s: number, precision = 2): string {\n  const string = s.toFixed(precision).replace(/\\.?0*$/, '');\n  return string === '-0' ? '0' : string;\n}\n\nexport class Lab implements Color {\n  readonly #l: number;\n  readonly #a: number;\n  readonly #b: number;\n  readonly #alpha: number|null;\n  readonly #origin?: Color;\n  readonly #originalText?: string;\n\n  readonly #conversions: ColorConversions = {\n    [Format.Nickname]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.Nickname, undefined, this),\n    [Format.HEX]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.HEX, undefined, this),\n    [Format.ShortHEX]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.ShortHEX, undefined, this),\n    [Format.HEXA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.HEXA, undefined, this),\n    [Format.ShortHEXA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.ShortHEXA, undefined, this),\n    [Format.RGB]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.RGB, undefined, this),\n    [Format.RGBA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.RGBA, undefined, this),\n    [Format.HSL]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.HSL, undefined, this),\n    [Format.HSLA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.HSLA, undefined, this),\n    [Format.HWB]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.HWB, undefined, this),\n    [Format.HWBA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.HWBA, undefined, this),\n    [Format.LCH]: () => new LCH(...ColorConverter.labToLch(this.#l, this.#a, this.#b), this.#alpha, undefined, this),\n    [Format.OKLCH]: () => new Oklch(...ColorConverter.xyzd50ToOklch(...this.#toXyzd50()), this.#alpha, undefined, this),\n    [Format.LAB]: () => this,\n    [Format.OKLAB]: () => new Oklab(\n        ...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...this.#toXyzd50())), this.#alpha, undefined,\n        this),\n\n    [Format.SRGB]: () => new ColorFunction(\n        Format.SRGB, [...ColorConverter.xyzd50ToSrgb(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.SRGB_LINEAR]: () => new ColorFunction(\n        Format.SRGB_LINEAR, [...ColorConverter.xyzd50TosRGBLinear(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.DISPLAY_P3]: () => new ColorFunction(\n        Format.DISPLAY_P3, [...ColorConverter.xyzd50ToDisplayP3(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.A98_RGB]: () => new ColorFunction(\n        Format.A98_RGB, [...ColorConverter.xyzd50ToAdobeRGB(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.PROPHOTO_RGB]: () => new ColorFunction(\n        Format.PROPHOTO_RGB, [...ColorConverter.xyzd50ToProPhoto(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.REC_2020]: () => new ColorFunction(\n        Format.REC_2020, [...ColorConverter.xyzd50ToRec2020(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.XYZ]: () => new ColorFunction(\n        Format.XYZ, [...ColorConverter.xyzd50ToD65(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.XYZ_D50]: () => new ColorFunction(Format.XYZ_D50, [...this.#toXyzd50(), this.#alpha], undefined, this),\n    [Format.XYZ_D65]: () => new ColorFunction(\n        Format.XYZ_D65, [...ColorConverter.xyzd50ToD65(...this.#toXyzd50()), this.#alpha], undefined, this),\n  };\n\n  #toXyzd50(): [number, number, number] {\n    return ColorConverter.labToXyzd50(this.#l, this.#a, this.#b);\n  }\n\n  #getRGBArray(withAlpha: boolean = true): number[] {\n    const params = [...ColorConverter.xyzd50ToSrgb(...this.#toXyzd50())];\n    if (this.#alpha !== null && withAlpha) {\n      params.push(this.#alpha);\n    }\n    return params;\n  }\n\n  constructor(l: number, a: number, b: number, alpha: number|null, originalText: string|undefined, origin?: Color) {\n    this.#l = clamp(l, {min: 0, max: 100});\n    this.#a = a;\n    this.#b = b;\n    this.#alpha = clamp(alpha, {min: 0, max: 1});\n    this.#origin = origin;\n    this.#originalText = originalText;\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    if (this.#origin) {\n      return this.#origin.as(format);\n    }\n    return this.#conversions[format]() as ReturnType<ColorConversions[T]>;\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  equal(color: Color): boolean {\n    const lab = color.as(Format.LAB);\n    return lab.#l === this.#l && lab.#a === this.#a && lab.#b === this.#b && lab.#alpha === this.#alpha;\n  }\n  format(): Format {\n    return Format.LAB;\n  }\n  setAlpha(alpha: number): Lab {\n    return new Lab(this.#l, this.#a, this.#b, alpha, undefined);\n  }\n  asString(format?: Format): string|null {\n    if (format) {\n      return this.as(format).asString();\n    }\n    if (this.#originalText) {\n      return this.#originalText;\n    }\n    const alpha = this.#alpha === null || this.#alpha === 1 ? '' : ` / ${stringifyWithPrecision(this.#alpha)}`;\n    return `lab(${stringifyWithPrecision(this.#l)} ${stringifyWithPrecision(this.#a)} ${\n        stringifyWithPrecision(this.#b)}${alpha})`;\n  }\n\n  static fromSpec(spec: ColorParameterSpec, text: string): Lab|null {\n    const L = parsePercentage(spec[0], [0, 100]) ?? parseNumber(spec[0]);\n    if (L === null) {\n      return null;\n    }\n    const a = parsePercentage(spec[1], [0, 125]) ?? parseNumber(spec[1]);\n    if (a === null) {\n      return null;\n    }\n    const b = parsePercentage(spec[2], [0, 125]) ?? parseNumber(spec[2]);\n    if (b === null) {\n      return null;\n    }\n    const alpha = parseAlpha(spec[3]);\n\n    return new Lab(L, a, b, alpha, text);\n  }\n}\n\nexport class LCH implements Color {\n  readonly #l: number;\n  readonly #c: number;\n  readonly #h: number;\n  readonly #alpha: number|null;\n  readonly #origin?: Color;\n  readonly #originalText?: string;\n\n  readonly #conversions: ColorConversions = {\n    [Format.Nickname]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.Nickname, undefined, this),\n    [Format.HEX]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.HEX, undefined, this),\n    [Format.ShortHEX]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.ShortHEX, undefined, this),\n    [Format.HEXA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.HEXA, undefined, this),\n    [Format.ShortHEXA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.ShortHEXA, undefined, this),\n    [Format.RGB]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.RGB, undefined, this),\n    [Format.RGBA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.RGBA, undefined, this),\n    [Format.HSL]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.HSL, undefined, this),\n    [Format.HSLA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.HSLA, undefined, this),\n    [Format.HWB]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.HWB, undefined, this),\n    [Format.HWBA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.HWBA, undefined, this),\n    [Format.LCH]: () => this,\n    [Format.OKLCH]: () => new Oklch(...ColorConverter.xyzd50ToOklch(...this.#toXyzd50()), this.#alpha, undefined, this),\n    [Format.LAB]: () => new Lab(...ColorConverter.lchToLab(this.#l, this.#c, this.#h), this.#alpha, undefined, this),\n    [Format.OKLAB]: () => new Oklab(\n        ...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...this.#toXyzd50())), this.#alpha, undefined,\n        this),\n\n    [Format.SRGB]: () => new ColorFunction(\n        Format.SRGB, [...ColorConverter.xyzd50ToSrgb(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.SRGB_LINEAR]: () => new ColorFunction(\n        Format.SRGB_LINEAR, [...ColorConverter.xyzd50TosRGBLinear(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.DISPLAY_P3]: () => new ColorFunction(\n        Format.DISPLAY_P3, [...ColorConverter.xyzd50ToDisplayP3(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.A98_RGB]: () => new ColorFunction(\n        Format.A98_RGB, [...ColorConverter.xyzd50ToAdobeRGB(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.PROPHOTO_RGB]: () => new ColorFunction(\n        Format.PROPHOTO_RGB, [...ColorConverter.xyzd50ToProPhoto(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.REC_2020]: () => new ColorFunction(\n        Format.REC_2020, [...ColorConverter.xyzd50ToRec2020(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.XYZ]: () => new ColorFunction(\n        Format.XYZ, [...ColorConverter.xyzd50ToD65(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.XYZ_D50]: () => new ColorFunction(Format.XYZ_D50, [...this.#toXyzd50(), this.#alpha], undefined, this),\n    [Format.XYZ_D65]: () => new ColorFunction(\n        Format.XYZ_D65, [...ColorConverter.xyzd50ToD65(...this.#toXyzd50()), this.#alpha], undefined, this),\n  };\n\n  #toXyzd50(): [number, number, number] {\n    return ColorConverter.labToXyzd50(...ColorConverter.lchToLab(this.#l, this.#c, this.#h));\n  }\n\n  #getRGBArray(withAlpha: boolean = true): number[] {\n    const params = [...ColorConverter.xyzd50ToSrgb(...this.#toXyzd50())];\n    if (this.#alpha !== null && withAlpha) {\n      params.push(this.#alpha);\n    }\n    return params;\n  }\n\n  constructor(l: number, c: number, h: number, alpha: number|null, originalText: string|undefined, origin?: Color) {\n    this.#l = clamp(l, {min: 0, max: 100});\n    this.#c = clamp(c, {min: 0});\n    this.#h = h;\n    this.#alpha = clamp(alpha, {min: 0, max: 1});\n    this.#origin = origin;\n    this.#originalText = originalText;\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    if (this.#origin) {\n      return this.#origin.as(format);\n    }\n    return this.#conversions[format]() as ReturnType<ColorConversions[T]>;\n  }\n  equal(color: Color): boolean {\n    const lch = color.as(Format.LCH);\n    return lch.#l === this.#l && lch.#c === this.#c && lch.#h === this.#h && lch.#alpha === this.#alpha;\n  }\n  format(): Format {\n    return Format.LCH;\n  }\n  setAlpha(alpha: number): Color {\n    return new LCH(this.#l, this.#c, this.#h, alpha, undefined);\n  }\n  asString(format?: Format): string|null {\n    if (format) {\n      return this.as(format).asString();\n    }\n    if (this.#originalText) {\n      return this.#originalText;\n    }\n    const alpha = this.#alpha === null || this.#alpha === 1 ? '' : ` / ${stringifyWithPrecision(this.#alpha)}`;\n    return `lch(${stringifyWithPrecision(this.#l)} ${stringifyWithPrecision(this.#c)} ${\n        stringifyWithPrecision(this.#h)}${alpha})`;\n  }\n\n  static fromSpec(spec: ColorParameterSpec, text: string): LCH|null {\n    const L = parsePercentage(spec[0], [0, 100]) ?? parseNumber(spec[0]);\n    if (L === null) {\n      return null;\n    }\n    const c = parsePercentage(spec[1], [0, 150]) ?? parseNumber(spec[1]);\n    if (c === null) {\n      return null;\n    }\n    const h = parseAngle(spec[2]);\n    if (h === null) {\n      return null;\n    }\n    const alpha = parseAlpha(spec[3]);\n\n    return new LCH(L, c, h, alpha, text);\n  }\n}\n\nexport class Oklab implements Color {\n  readonly #l: number;\n  readonly #a: number;\n  readonly #b: number;\n  readonly #alpha: number|null;\n  readonly #origin?: Color;\n  readonly #originalText?: string;\n\n  readonly #conversions: ColorConversions = {\n    [Format.Nickname]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.Nickname, undefined, this),\n    [Format.HEX]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.HEX, undefined, this),\n    [Format.ShortHEX]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.ShortHEX, undefined, this),\n    [Format.HEXA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.HEXA, undefined, this),\n    [Format.ShortHEXA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.ShortHEXA, undefined, this),\n    [Format.RGB]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.RGB, undefined, this),\n    [Format.RGBA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.RGBA, undefined, this),\n    [Format.HSL]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.HSL, undefined, this),\n    [Format.HSLA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.HSLA, undefined, this),\n    [Format.HWB]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.HWB, undefined, this),\n    [Format.HWBA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.HWBA, undefined, this),\n    [Format.LCH]: () => new LCH(\n        ...ColorConverter.labToLch(...ColorConverter.xyzd50ToLab(...this.#toXyzd50())), this.#alpha, undefined, this),\n    [Format.OKLCH]: () => new Oklch(...ColorConverter.xyzd50ToOklch(...this.#toXyzd50()), this.#alpha, undefined, this),\n    [Format.LAB]: () => new Lab(...ColorConverter.xyzd50ToLab(...this.#toXyzd50()), this.#alpha, undefined, this),\n    [Format.OKLAB]: () => this,\n\n    [Format.SRGB]: () => new ColorFunction(\n        Format.SRGB, [...ColorConverter.xyzd50ToSrgb(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.SRGB_LINEAR]: () => new ColorFunction(\n        Format.SRGB_LINEAR, [...ColorConverter.xyzd50TosRGBLinear(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.DISPLAY_P3]: () => new ColorFunction(\n        Format.DISPLAY_P3, [...ColorConverter.xyzd50ToDisplayP3(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.A98_RGB]: () => new ColorFunction(\n        Format.A98_RGB, [...ColorConverter.xyzd50ToAdobeRGB(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.PROPHOTO_RGB]: () => new ColorFunction(\n        Format.PROPHOTO_RGB, [...ColorConverter.xyzd50ToProPhoto(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.REC_2020]: () => new ColorFunction(\n        Format.REC_2020, [...ColorConverter.xyzd50ToRec2020(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.XYZ]: () => new ColorFunction(\n        Format.XYZ, [...ColorConverter.xyzd50ToD65(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.XYZ_D50]: () => new ColorFunction(Format.XYZ_D50, [...this.#toXyzd50(), this.#alpha], undefined, this),\n    [Format.XYZ_D65]: () => new ColorFunction(\n        Format.XYZ_D65, [...ColorConverter.xyzd50ToD65(...this.#toXyzd50()), this.#alpha], undefined, this),\n  };\n\n  #toXyzd50(): [number, number, number] {\n    return ColorConverter.xyzd65ToD50(...ColorConverter.oklabToXyzd65(this.#l, this.#a, this.#b));\n  }\n\n  #getRGBArray(withAlpha: boolean = true): number[] {\n    const params = [...ColorConverter.xyzd50ToSrgb(...this.#toXyzd50())];\n    if (this.#alpha !== null && withAlpha) {\n      params.push(this.#alpha);\n    }\n    return params;\n  }\n\n  constructor(l: number, a: number, b: number, alpha: number|null, originalText: string|undefined, origin?: Color) {\n    this.#l = clamp(l, {min: 0, max: 1});\n    this.#a = a;\n    this.#b = b;\n    this.#alpha = clamp(alpha, {min: 0, max: 1});\n    this.#origin = origin;\n    this.#originalText = originalText;\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    if (this.#origin) {\n      return this.#origin.as(format);\n    }\n    return this.#conversions[format]() as ReturnType<ColorConversions[T]>;\n  }\n  equal(color: Color): boolean {\n    const oklab = color.as(Format.OKLAB);\n    return oklab.#l === this.#l && oklab.#a === this.#a && oklab.#b === this.#b && oklab.#alpha === this.#alpha;\n  }\n  format(): Format {\n    return Format.OKLAB;\n  }\n  setAlpha(alpha: number): Color {\n    return new Oklab(this.#l, this.#a, this.#b, alpha, undefined);\n  }\n  asString(format?: Format): string|null {\n    if (format) {\n      return this.as(format).asString();\n    }\n    if (this.#originalText) {\n      return this.#originalText;\n    }\n    const alpha = this.#alpha === null || this.#alpha === 1 ? '' : ` / ${stringifyWithPrecision(this.#alpha)}`;\n    return `oklab(${stringifyWithPrecision(this.#l)} ${stringifyWithPrecision(this.#a)} ${\n        stringifyWithPrecision(this.#b)}${alpha})`;\n  }\n\n  static fromSpec(spec: ColorParameterSpec, text: string): Oklab|null {\n    const L = parsePercentage(spec[0], [0, 1]) ?? parseNumber(spec[0]);\n    if (L === null) {\n      return null;\n    }\n    const a = parsePercentage(spec[1], [0, 0.4]) ?? parseNumber(spec[1]);\n    if (a === null) {\n      return null;\n    }\n    const b = parsePercentage(spec[2], [0, 0.4]) ?? parseNumber(spec[2]);\n    if (b === null) {\n      return null;\n    }\n    const alpha = parseAlpha(spec[3]);\n\n    return new Oklab(L, a, b, alpha, text);\n  }\n}\n\nexport class Oklch implements Color {\n  readonly #l: number;\n  readonly #c: number;\n  readonly #h: number;\n  readonly #alpha: number|null;\n  readonly #origin?: Color;\n  readonly #originalText?: string;\n\n  readonly #conversions: ColorConversions = {\n    [Format.Nickname]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.Nickname, undefined, this),\n    [Format.HEX]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.HEX, undefined, this),\n    [Format.ShortHEX]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.ShortHEX, undefined, this),\n    [Format.HEXA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.HEXA, undefined, this),\n    [Format.ShortHEXA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.ShortHEXA, undefined, this),\n    [Format.RGB]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.RGB, undefined, this),\n    [Format.RGBA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.RGBA, undefined, this),\n    [Format.HSL]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.HSL, undefined, this),\n    [Format.HSLA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.HSLA, undefined, this),\n    [Format.HWB]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.HWB, undefined, this),\n    [Format.HWBA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.HWBA, undefined, this),\n\n    [Format.LCH]: () => new LCH(\n        ...ColorConverter.labToLch(...ColorConverter.xyzd50ToLab(...this.#toXyzd50())), this.#alpha, undefined, this),\n    [Format.OKLCH]: () => this,\n    [Format.LAB]: () => new Lab(...ColorConverter.xyzd50ToLab(...this.#toXyzd50()), this.#alpha, undefined, this),\n    [Format.OKLAB]: () => new Oklab(\n        ...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...this.#toXyzd50())), this.#alpha, undefined,\n        this),\n\n    [Format.SRGB]: () => new ColorFunction(\n        Format.SRGB, [...ColorConverter.xyzd50ToSrgb(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.SRGB_LINEAR]: () => new ColorFunction(\n        Format.SRGB_LINEAR, [...ColorConverter.xyzd50TosRGBLinear(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.DISPLAY_P3]: () => new ColorFunction(\n        Format.DISPLAY_P3, [...ColorConverter.xyzd50ToDisplayP3(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.A98_RGB]: () => new ColorFunction(\n        Format.A98_RGB, [...ColorConverter.xyzd50ToAdobeRGB(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.PROPHOTO_RGB]: () => new ColorFunction(\n        Format.PROPHOTO_RGB, [...ColorConverter.xyzd50ToProPhoto(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.REC_2020]: () => new ColorFunction(\n        Format.REC_2020, [...ColorConverter.xyzd50ToRec2020(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.XYZ]: () => new ColorFunction(\n        Format.XYZ, [...ColorConverter.xyzd50ToD65(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.XYZ_D50]: () => new ColorFunction(Format.XYZ_D50, [...this.#toXyzd50(), this.#alpha], undefined, this),\n    [Format.XYZ_D65]: () => new ColorFunction(\n        Format.XYZ_D65, [...ColorConverter.xyzd50ToD65(...this.#toXyzd50()), this.#alpha], undefined, this),\n  };\n\n  #toXyzd50(): [number, number, number] {\n    return ColorConverter.oklchToXyzd50(this.#l, this.#c, this.#h);\n  }\n\n  #getRGBArray(withAlpha: boolean = true): number[] {\n    const params = [...ColorConverter.xyzd50ToSrgb(...this.#toXyzd50())];\n    if (this.#alpha !== null && withAlpha) {\n      params.push(this.#alpha);\n    }\n    return params;\n  }\n\n  constructor(l: number, c: number, h: number, alpha: number|null, originalText: string|undefined, origin?: Color) {\n    this.#l = clamp(l, {min: 0, max: 1});\n    this.#c = clamp(c, {min: 0});\n    this.#h = h;\n    this.#alpha = clamp(alpha, {min: 0, max: 1});\n    this.#origin = origin;\n    this.#originalText = originalText;\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    if (this.#origin) {\n      return this.#origin.as(format);\n    }\n    return this.#conversions[format]() as ReturnType<ColorConversions[T]>;\n  }\n  equal(color: Color): boolean {\n    const oklch = color.as(Format.OKLCH);\n    return oklch.#l === this.#l && oklch.#c === this.#c && oklch.#h === this.#h && oklch.#alpha === this.#alpha;\n  }\n  format(): Format {\n    return Format.OKLCH;\n  }\n  setAlpha(alpha: number): Color {\n    return new Oklch(this.#l, this.#c, this.#h, alpha, undefined);\n  }\n  asString(format?: Format): string|null {\n    if (format) {\n      return this.as(format).asString();\n    }\n    if (this.#originalText) {\n      return this.#originalText;\n    }\n    const alpha = this.#alpha === null || this.#alpha === 1 ? '' : ` / ${stringifyWithPrecision(this.#alpha)}`;\n    return `oklch(${stringifyWithPrecision(this.#l)} ${stringifyWithPrecision(this.#c)} ${\n        stringifyWithPrecision(this.#h)}${alpha})`;\n  }\n\n  static fromSpec(spec: ColorParameterSpec, text: string): Oklch|null {\n    const L = parsePercentage(spec[0], [0, 1]) ?? parseNumber(spec[0]);\n    if (L === null) {\n      return null;\n    }\n    const c = parsePercentage(spec[1], [0, 0.4]) ?? parseNumber(spec[1]);\n    if (c === null) {\n      return null;\n    }\n    const h = parseAngle(spec[2]);\n    if (h === null) {\n      return null;\n    }\n    const alpha = parseAlpha(spec[3]);\n\n    return new Oklch(L, c, h, alpha, text);\n  }\n}\n\nexport class ColorFunction implements Color {\n  readonly #spec: [number, number, number, number|null];\n  readonly #colorSpace: ColorSpace;\n  readonly #origin?: Color;\n  readonly #originalText?: string;\n\n  readonly #conversions: ColorConversions = {\n    [Format.Nickname]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.Nickname, undefined, this),\n    [Format.HEX]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.HEX, undefined, this),\n    [Format.ShortHEX]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.ShortHEX, undefined, this),\n    [Format.HEXA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.HEXA, undefined, this),\n    [Format.ShortHEXA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.ShortHEXA, undefined, this),\n    [Format.RGB]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.RGB, undefined, this),\n    [Format.RGBA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.RGBA, undefined, this),\n    [Format.HSL]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.HSL, undefined, this),\n    [Format.HSLA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.HSLA, undefined, this),\n    [Format.HWB]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ false), Format.HWB, undefined, this),\n    [Format.HWBA]: () => new Legacy(this.#getRGBArray(/* withAlpha= */ true), Format.HWBA, undefined, this),\n    [Format.LCH]: () => new LCH(\n        ...ColorConverter.labToLch(...ColorConverter.xyzd50ToLab(...this.#toXyzd50())), this.#alpha, undefined, this),\n    [Format.OKLCH]: () => new Oklch(...ColorConverter.xyzd50ToOklch(...this.#toXyzd50()), this.#alpha, undefined, this),\n    [Format.LAB]: () => new Lab(...ColorConverter.xyzd50ToLab(...this.#toXyzd50()), this.#alpha, undefined, this),\n    [Format.OKLAB]: () => new Oklab(\n        ...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...this.#toXyzd50())), this.#alpha, undefined,\n        this),\n\n    [Format.SRGB]: () => new ColorFunction(\n        Format.SRGB, [...ColorConverter.xyzd50ToSrgb(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.SRGB_LINEAR]: () => new ColorFunction(\n        Format.SRGB_LINEAR, [...ColorConverter.xyzd50TosRGBLinear(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.DISPLAY_P3]: () => new ColorFunction(\n        Format.DISPLAY_P3, [...ColorConverter.xyzd50ToDisplayP3(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.A98_RGB]: () => new ColorFunction(\n        Format.A98_RGB, [...ColorConverter.xyzd50ToAdobeRGB(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.PROPHOTO_RGB]: () => new ColorFunction(\n        Format.PROPHOTO_RGB, [...ColorConverter.xyzd50ToProPhoto(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.REC_2020]: () => new ColorFunction(\n        Format.REC_2020, [...ColorConverter.xyzd50ToRec2020(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.XYZ]: () => new ColorFunction(\n        Format.XYZ, [...ColorConverter.xyzd50ToD65(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.XYZ_D50]: () => new ColorFunction(Format.XYZ_D50, [...this.#toXyzd50(), this.#alpha], undefined, this),\n    [Format.XYZ_D65]: () => new ColorFunction(\n        Format.XYZ_D65, [...ColorConverter.xyzd50ToD65(...this.#toXyzd50()), this.#alpha], undefined, this),\n  };\n\n  get #alpha(): number|null {\n    return this.#spec[3] ?? null;\n  }\n\n  #toXyzd50(): [number, number, number] {\n    const [p0, p1, p2] = this.#spec;\n    switch (this.#colorSpace) {\n      case Format.SRGB:\n        return ColorConverter.srgbToXyzd50(p0, p1, p2);\n      case Format.SRGB_LINEAR:\n        return ColorConverter.srgbLinearToXyzd50(p0, p1, p2);\n      case Format.DISPLAY_P3:\n        return ColorConverter.displayP3ToXyzd50(p0, p1, p2);\n      case Format.A98_RGB:\n        return ColorConverter.adobeRGBToXyzd50(p0, p1, p2);\n      case Format.PROPHOTO_RGB:\n        return ColorConverter.proPhotoToXyzd50(p0, p1, p2);\n      case Format.REC_2020:\n        return ColorConverter.rec2020ToXyzd50(p0, p1, p2);\n      case Format.XYZ_D50:\n        return [p0, p1, p2];\n      case Format.XYZ:\n      case Format.XYZ_D65:\n        return ColorConverter.xyzd65ToD50(p0, p1, p2);\n    }\n    throw new Error('Invalid color space');\n  }\n\n  #getRGBArray(withAlpha: boolean = true): number[] {\n    const [p0, p1, p2] = this.#spec;\n    const params =\n        this.#colorSpace === Format.SRGB ? [p0, p1, p2] : [...ColorConverter.xyzd50ToSrgb(...this.#toXyzd50())];\n    if (this.#alpha !== null && withAlpha) {\n      params.push(this.#alpha);\n    }\n    return params;\n  }\n\n  constructor(\n      colorSpace: ColorSpace, rgbOrXyz: [number, number, number, number|null], originalText: string|undefined,\n      origin?: Color) {\n    this.#colorSpace = colorSpace;\n    this.#origin = origin;\n    this.#originalText = originalText;\n\n    if (colorSpace === Format.XYZ || colorSpace === Format.XYZ_D50 || colorSpace === Format.XYZ_D65) {\n      this.#spec = [rgbOrXyz[0], rgbOrXyz[1], rgbOrXyz[2], clamp(rgbOrXyz[3], {min: 0, max: 1})];\n    } else {\n      this.#spec = [\n        clamp(rgbOrXyz[0], {min: 0, max: 1}),\n        clamp(rgbOrXyz[1], {min: 0, max: 1}),\n        clamp(rgbOrXyz[2], {min: 0, max: 1}),\n        clamp(rgbOrXyz[3], {min: 0, max: 1}),\n      ];\n    }\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    if (this.#colorSpace === format) {\n      return this as ReturnType<ColorConversions[T]>;\n    }\n    if (this.#origin) {\n      return this.#origin.as(format);\n    }\n    return this.#conversions[format]() as ReturnType<ColorConversions[T]>;\n  }\n  equal(color: Color): boolean {\n    const space = color.as(this.#colorSpace);\n    return space.#spec[0] === this.#spec[0] && space.#spec[1] === this.#spec[1] && space.#spec[2] === this.#spec[2] &&\n        space.#spec[3] === this.#spec[3];\n  }\n  format(): Format {\n    return this.#colorSpace;\n  }\n  setAlpha(alpha: number): Color {\n    return new ColorFunction(this.#colorSpace, [this.#spec[0], this.#spec[1], this.#spec[2], alpha], undefined);\n  }\n  asString(format?: Format): string|null {\n    if (format) {\n      return this.as(format).asString();\n    }\n    if (this.#originalText) {\n      return this.#originalText;\n    }\n    const alpha = this.#spec[3] === null || this.#spec[3] === 1 ? '' : ` / ${stringifyWithPrecision(this.#spec[3])}`;\n    return `color(${this.#colorSpace} ${stringifyWithPrecision(this.#spec[0])} ${\n        stringifyWithPrecision(this.#spec[1])} ${stringifyWithPrecision(this.#spec[2])}${alpha})`;\n  }\n}\n\ntype LegacyColor = Format.Nickname|Format.HEX|Format.ShortHEX|Format.HEXA|Format.ShortHEXA|Format.RGB|Format.RGBA|\n                   Format.HSL|Format.HSLA|Format.HWB|Format.HWBA;\nexport class Legacy implements Color {\n  #hslaInternal: number[]|undefined;\n  #hwbaInternal: number[]|undefined;\n  #rgbaInternal: number[];\n  #originalText: string|null;\n  #formatInternal: LegacyColor;\n  readonly #origin?: Color;\n\n  readonly #conversions: ColorConversions = {\n    [Format.Nickname]: () => new Legacy(this.#rgbaInternal, Format.Nickname, undefined, this),\n    [Format.HEX]: () => new Legacy(this.#rgbaInternal, Format.HEX, undefined, this),\n    [Format.ShortHEX]: () => new Legacy(this.#rgbaInternal, Format.ShortHEX, undefined, this),\n    [Format.HEXA]: () => new Legacy(this.#rgbaInternal, Format.HEXA, undefined, this),\n    [Format.ShortHEXA]: () => new Legacy(this.#rgbaInternal, Format.ShortHEXA, undefined, this),\n    [Format.RGB]: () => new Legacy(this.#rgbaInternal, Format.RGB, undefined, this),\n    [Format.RGBA]: () => new Legacy(this.#rgbaInternal, Format.RGBA, undefined, this),\n    [Format.HSL]: () => new Legacy(this.#rgbaInternal, Format.HSL, undefined, this),\n    [Format.HSLA]: () => new Legacy(this.#rgbaInternal, Format.HSLA, undefined, this),\n    [Format.HWB]: () => new Legacy(this.#rgbaInternal, Format.HWB, undefined, this),\n    [Format.HWBA]: () => new Legacy(this.#rgbaInternal, Format.HWBA, undefined, this),\n    [Format.LCH]: () => new LCH(\n        ...ColorConverter.labToLch(...ColorConverter.xyzd50ToLab(...this.#toXyzd50())), this.#alpha, undefined, this),\n    [Format.OKLCH]: () => new Oklch(...ColorConverter.xyzd50ToOklch(...this.#toXyzd50()), this.#alpha, undefined, this),\n    [Format.LAB]: () => new Lab(...ColorConverter.xyzd50ToLab(...this.#toXyzd50()), this.#alpha, undefined, this),\n    [Format.OKLAB]: () => new Oklab(\n        ...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...this.#toXyzd50())), this.#alpha, undefined,\n        this),\n\n    [Format.SRGB]: () => new ColorFunction(\n        Format.SRGB, [...ColorConverter.xyzd50ToSrgb(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.SRGB_LINEAR]: () => new ColorFunction(\n        Format.SRGB_LINEAR, [...ColorConverter.xyzd50TosRGBLinear(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.DISPLAY_P3]: () => new ColorFunction(\n        Format.DISPLAY_P3, [...ColorConverter.xyzd50ToDisplayP3(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.A98_RGB]: () => new ColorFunction(\n        Format.A98_RGB, [...ColorConverter.xyzd50ToAdobeRGB(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.PROPHOTO_RGB]: () => new ColorFunction(\n        Format.PROPHOTO_RGB, [...ColorConverter.xyzd50ToProPhoto(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.REC_2020]: () => new ColorFunction(\n        Format.REC_2020, [...ColorConverter.xyzd50ToRec2020(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.XYZ]: () => new ColorFunction(\n        Format.XYZ, [...ColorConverter.xyzd50ToD65(...this.#toXyzd50()), this.#alpha], undefined, this),\n    [Format.XYZ_D50]: () => new ColorFunction(Format.XYZ_D50, [...this.#toXyzd50(), this.#alpha], undefined, this),\n    [Format.XYZ_D65]: () => new ColorFunction(\n        Format.XYZ_D65, [...ColorConverter.xyzd50ToD65(...this.#toXyzd50()), this.#alpha], undefined, this),\n  };\n\n  #toXyzd50(): [number, number, number] {\n    const [r, g, b] = this.#rgbaInternal;\n    return ColorConverter.srgbToXyzd50(r, g, b);\n  }\n\n  get #alpha(): number|null {\n    switch (this.format()) {\n      case Format.HEXA:\n      case Format.ShortHEXA:\n      case Format.RGBA:\n      case Format.HSLA:\n      case Format.HWBA:\n        return this.#rgbaInternal[3];\n      default:\n        return null;\n    }\n  }\n\n  asLegacyColor(): Legacy {\n    return this;\n  }\n\n  constructor(rgba: number[], format: LegacyColor, originalText?: string, origin?: Color) {\n    this.#hslaInternal = undefined;\n    this.#hwbaInternal = undefined;\n    this.#originalText = originalText || null;\n    this.#formatInternal = format;\n    this.#origin = origin;\n\n    this.#rgbaInternal = [\n      clamp(rgba[0], {min: 0, max: 1}),\n      clamp(rgba[1], {min: 0, max: 1}),\n      clamp(rgba[2], {min: 0, max: 1}),\n      clamp(rgba[3] ?? 1, {min: 0, max: 1}),\n    ];\n  }\n\n  static fromHex(hex: string, text: string): Legacy {\n    hex = hex.toLowerCase();\n    let format: LegacyColor;\n    if (hex.length === 3) {\n      format = Format.ShortHEX;\n      hex = hex.charAt(0) + hex.charAt(0) + hex.charAt(1) + hex.charAt(1) + hex.charAt(2) + hex.charAt(2);\n    } else if (hex.length === 4) {\n      format = Format.ShortHEXA;\n      hex = hex.charAt(0) + hex.charAt(0) + hex.charAt(1) + hex.charAt(1) + hex.charAt(2) + hex.charAt(2) +\n          hex.charAt(3) + hex.charAt(3);\n    } else if (hex.length === 6) {\n      format = Format.HEX;\n    } else {\n      format = Format.HEXA;\n    }\n    const r = parseInt(hex.substring(0, 2), 16);\n    const g = parseInt(hex.substring(2, 4), 16);\n    const b = parseInt(hex.substring(4, 6), 16);\n    let a = 1;\n    if (hex.length === 8) {\n      a = parseInt(hex.substring(6, 8), 16) / 255;\n    }\n    return new Legacy([r / 255, g / 255, b / 255, a], format, text);\n  }\n\n  static fromName(name: string, text: string): Legacy|null {\n    const nickname = name.toLowerCase();\n    const rgba = Nicknames.get(nickname);\n    if (rgba !== undefined) {\n      const color = Legacy.fromRGBA(rgba);\n      color.#formatInternal = Format.Nickname;\n      color.#originalText = text;\n      return color;\n    }\n    return null;\n  }\n\n  static fromRGBAFunction(r: string, g: string, b: string, alpha: string|undefined, text: string): Legacy|null {\n    const rgba = [\n      parseRgbNumeric(r),\n      parseRgbNumeric(g),\n      parseRgbNumeric(b),\n      alpha ? parseAlphaNumeric(alpha) : 1,\n    ];\n\n    if (!Platform.ArrayUtilities.arrayDoesNotContainNullOrUndefined(rgba)) {\n      return null;\n    }\n    return new Legacy(rgba, alpha ? Format.RGBA : Format.RGB, text);\n  }\n\n  static fromHSLA(h: string, s: string, l: string, alpha: string|undefined, text: string): Legacy|null {\n    const parameters = [\n      parseHueNumeric(h),\n      parseSatLightNumeric(s),\n      parseSatLightNumeric(l),\n      alpha ? parseAlphaNumeric(alpha) : 1,\n    ];\n    if (!Platform.ArrayUtilities.arrayDoesNotContainNullOrUndefined(parameters)) {\n      return null;\n    }\n    const rgba: number[] = [];\n    hsl2rgb(parameters, rgba);\n    return new Legacy(rgba, alpha ? Format.HSLA : Format.HSL, text);\n  }\n\n  static fromHWB(h: string, w: string, b: string, alpha: string|undefined, text: string): Legacy|null {\n    const parameters = [\n      parseHueNumeric(h),\n      parseSatLightNumeric(w),\n      parseSatLightNumeric(b),\n      alpha ? parseAlphaNumeric(alpha) : 1,\n    ];\n    if (!Platform.ArrayUtilities.arrayDoesNotContainNullOrUndefined(parameters)) {\n      return null;\n    }\n    const rgba: number[] = [];\n    hwb2rgb(parameters, rgba);\n    return new Legacy(rgba, alpha ? Format.HWBA : Format.HWB, text);\n  }\n\n  static fromRGBA(rgba: number[]): Legacy {\n    return new Legacy([rgba[0] / 255, rgba[1] / 255, rgba[2] / 255, rgba[3]], Format.RGBA);\n  }\n\n  static fromHSVA(hsva: number[]): Legacy {\n    const rgba: number[] = [];\n    hsva2rgba(hsva, rgba);\n    return new Legacy(rgba, Format.HSLA);\n  }\n\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    if (format === this.format()) {\n      return this as ReturnType<ColorConversions[T]>;\n    }\n    if (this.#origin) {\n      return this.#origin.as(format);\n    }\n    return this.#conversions[format]() as ReturnType<ColorConversions[T]>;\n  }\n\n  format(): LegacyColor {\n    return this.#formatInternal;\n  }\n\n  /** HSLA with components within [0..1]\n   */\n  hsla(): number[] {\n    if (this.#hslaInternal) {\n      return this.#hslaInternal;\n    }\n    this.#hslaInternal = rgbaToHsla(this.#rgbaInternal);\n    return this.#hslaInternal;\n  }\n\n  canonicalHSLA(): number[] {\n    const hsla = this.hsla();\n    return [Math.round(hsla[0] * 360), Math.round(hsla[1] * 100), Math.round(hsla[2] * 100), hsla[3]];\n  }\n\n  /** HSVA with components within [0..1]\n   */\n  hsva(): number[] {\n    const hsla = this.hsla();\n    const h = hsla[0];\n    let s = hsla[1];\n    const l = hsla[2];\n\n    s *= l < 0.5 ? l : 1 - l;\n    return [h, s !== 0 ? 2 * s / (l + s) : 0, (l + s), hsla[3]];\n  }\n\n  /** HWBA with components within [0..1]\n   */\n  hwba(): number[] {\n    if (this.#hwbaInternal) {\n      return this.#hwbaInternal;\n    }\n    this.#hwbaInternal = rgbaToHwba(this.#rgbaInternal);\n    return this.#hwbaInternal;\n  }\n\n  canonicalHWBA(): number[] {\n    const hwba = this.hwba();\n    return [Math.round(hwba[0] * 360), Math.round(hwba[1] * 100), Math.round(hwba[2] * 100), hwba[3]];\n  }\n\n  hasAlpha(): boolean {\n    return this.#rgbaInternal[3] !== 1;\n  }\n\n  detectHEXFormat(): Format {\n    let canBeShort = true;\n    for (let i = 0; i < 4; ++i) {\n      const c = Math.round(this.#rgbaInternal[i] * 255);\n      if (c % 17) {\n        canBeShort = false;\n        break;\n      }\n    }\n\n    const hasAlpha = this.hasAlpha();\n    if (canBeShort) {\n      return hasAlpha ? Format.ShortHEXA : Format.ShortHEX;\n    }\n    return hasAlpha ? Format.HEXA : Format.HEX;\n  }\n\n  asString(format?: Format): string|null {\n    if (format) {\n      return this.as(format).asString();\n    }\n\n    if (!format) {\n      format = this.#formatInternal;\n    }\n\n    if (format === this.#formatInternal && this.#originalText) {\n      return this.#originalText;\n    }\n\n    function toRgbValue(value: number): number {\n      return Math.round(value * 255);\n    }\n\n    function toHexValue(value: number): string {\n      const hex = Math.round(value * 255).toString(16);\n      return hex.length === 1 ? '0' + hex : hex;\n    }\n\n    function toShortHexValue(value: number): string {\n      return (Math.round(value * 255) / 17).toString(16);\n    }\n\n    switch (format) {\n      case Format.RGB:\n      case Format.RGBA: {\n        const start = Platform.StringUtilities.sprintf(\n            'rgb(%d %d %d', toRgbValue(this.#rgbaInternal[0]), toRgbValue(this.#rgbaInternal[1]),\n            toRgbValue(this.#rgbaInternal[2]));\n        if (this.hasAlpha()) {\n          return start + Platform.StringUtilities.sprintf(' / %d%)', Math.round(this.#rgbaInternal[3] * 100));\n        }\n        return start + ')';\n      }\n      case Format.HSL:\n      case Format.HSLA: {\n        const hsla = this.hsla();\n        const start = Platform.StringUtilities.sprintf(\n            'hsl(%sdeg %s% %s%', stringifyWithPrecision(hsla[0] * 360), stringifyWithPrecision(hsla[1] * 100),\n            stringifyWithPrecision(hsla[2] * 100));\n        if (this.hasAlpha()) {\n          return start + Platform.StringUtilities.sprintf(' / %s%)', stringifyWithPrecision(hsla[3] * 100));\n        }\n        return start + ')';\n      }\n      case Format.HWB:\n      case Format.HWBA: {\n        const hwba = this.hwba();\n        const start = Platform.StringUtilities.sprintf(\n            'hwb(%sdeg %s% %s%', stringifyWithPrecision(hwba[0] * 360), stringifyWithPrecision(hwba[1] * 100),\n            stringifyWithPrecision(hwba[2] * 100));\n        if (this.hasAlpha()) {\n          return start + Platform.StringUtilities.sprintf(' / %s%)', stringifyWithPrecision(hwba[3] * 100));\n        }\n        return start + ')';\n      }\n      case Format.HEXA: {\n        return Platform.StringUtilities\n            .sprintf(\n                '#%s%s%s%s', toHexValue(this.#rgbaInternal[0]), toHexValue(this.#rgbaInternal[1]),\n                toHexValue(this.#rgbaInternal[2]), toHexValue(this.#rgbaInternal[3]))\n            .toLowerCase();\n      }\n      case Format.HEX: {\n        if (this.hasAlpha()) {\n          return null;\n        }\n        return Platform.StringUtilities\n            .sprintf(\n                '#%s%s%s', toHexValue(this.#rgbaInternal[0]), toHexValue(this.#rgbaInternal[1]),\n                toHexValue(this.#rgbaInternal[2]))\n            .toLowerCase();\n      }\n      case Format.ShortHEXA: {\n        const hexFormat = this.detectHEXFormat();\n        if (hexFormat !== Format.ShortHEXA && hexFormat !== Format.ShortHEX) {\n          return null;\n        }\n        return Platform.StringUtilities\n            .sprintf(\n                '#%s%s%s%s', toShortHexValue(this.#rgbaInternal[0]), toShortHexValue(this.#rgbaInternal[1]),\n                toShortHexValue(this.#rgbaInternal[2]), toShortHexValue(this.#rgbaInternal[3]))\n            .toLowerCase();\n      }\n      case Format.ShortHEX: {\n        if (this.hasAlpha()) {\n          return null;\n        }\n        if (this.detectHEXFormat() !== Format.ShortHEX) {\n          return null;\n        }\n        return Platform.StringUtilities\n            .sprintf(\n                '#%s%s%s', toShortHexValue(this.#rgbaInternal[0]), toShortHexValue(this.#rgbaInternal[1]),\n                toShortHexValue(this.#rgbaInternal[2]))\n            .toLowerCase();\n      }\n      case Format.Nickname: {\n        return this.nickname();\n      }\n    }\n\n    return this.#originalText;\n  }\n\n  rgba(): number[] {\n    return this.#rgbaInternal.slice();\n  }\n\n  canonicalRGBA(): number[] {\n    const rgba = new Array(4);\n    for (let i = 0; i < 3; ++i) {\n      rgba[i] = Math.round(this.#rgbaInternal[i] * 255);\n    }\n    rgba[3] = this.#rgbaInternal[3];\n    return rgba;\n  }\n\n  /** nickname\n   */\n  nickname(): string|null {\n    return RGBAToNickname.get(String(this.canonicalRGBA())) || null;\n  }\n\n  toProtocolRGBA(): {\n    r: number,\n    g: number,\n    b: number,\n    a: (number|undefined),\n  } {\n    const rgba = this.canonicalRGBA();\n    const result: {\n      r: number,\n      g: number,\n      b: number,\n      a: number|undefined,\n    } = {r: rgba[0], g: rgba[1], b: rgba[2], a: undefined};\n    if (rgba[3] !== 1) {\n      result.a = rgba[3];\n    }\n    return result;\n  }\n\n  invert(): Legacy {\n    const rgba = [];\n    rgba[0] = 1 - this.#rgbaInternal[0];\n    rgba[1] = 1 - this.#rgbaInternal[1];\n    rgba[2] = 1 - this.#rgbaInternal[2];\n    rgba[3] = this.#rgbaInternal[3];\n    return new Legacy(rgba, Format.RGBA);\n  }\n\n  setAlpha(alpha: number): Legacy {\n    const rgba = this.#rgbaInternal.slice();\n    rgba[3] = alpha;\n    return new Legacy(rgba, Format.RGBA);\n  }\n\n  blendWith(fgColor: Legacy): Legacy {\n    const rgba: number[] = blendColors(fgColor.#rgbaInternal, this.#rgbaInternal);\n    return new Legacy(rgba, Format.RGBA);\n  }\n\n  blendWithAlpha(alpha: number): Legacy {\n    const rgba = this.#rgbaInternal.slice();\n    rgba[3] *= alpha;\n    return new Legacy(rgba, Format.RGBA);\n  }\n\n  setFormat(format: LegacyColor): void {\n    this.#formatInternal = format;\n  }\n\n  equal(other: Legacy): boolean {\n    return this.#rgbaInternal.every((v, i) => v === other.#rgbaInternal[i]) &&\n        this.#formatInternal === other.#formatInternal;\n  }\n}\n\nexport const Regex: RegExp =\n    /((?:rgba?|hsla?|hwba?|lab|lch|oklab|oklch|color)\\([^)]+\\)|#[0-9a-fA-F]{8}|#[0-9a-fA-F]{6}|#[0-9a-fA-F]{3,4}|\\b[a-zA-Z]+\\b(?!-))/g;\nexport const ColorMixRegex: RegExp = /(?:color-mix)\\(.+\\)/g;\nexport const enum Format {\n  Nickname = 'nickname',\n  HEX = 'hex',\n  ShortHEX = 'shorthex',\n  HEXA = 'hexa',\n  ShortHEXA = 'shorthexa',\n  RGB = 'rgb',\n  RGBA = 'rgba',\n  HSL = 'hsl',\n  HSLA = 'hsla',\n  HWB = 'hwb',\n  HWBA = 'hwba',\n  LCH = 'lch',\n  OKLCH = 'oklch',\n  LAB = 'lab',\n  OKLAB = 'oklab',\n  SRGB = 'srgb',\n  SRGB_LINEAR = 'srgb-linear',\n  DISPLAY_P3 = 'display-p3',\n  A98_RGB = 'a98-rgb',\n  PROPHOTO_RGB = 'prophoto-rgb',\n  REC_2020 = 'rec2020',\n  XYZ = 'xyz',\n  XYZ_D50 = 'xyz-d50',\n  XYZ_D65 = 'xyz-d65',\n}\n\nconst COLOR_TO_RGBA_ENTRIES: Array<readonly[string, number[]]> = [\n  ['aliceblue', [240, 248, 255]],\n  ['antiquewhite', [250, 235, 215]],\n  ['aqua', [0, 255, 255]],\n  ['aquamarine', [127, 255, 212]],\n  ['azure', [240, 255, 255]],\n  ['beige', [245, 245, 220]],\n  ['bisque', [255, 228, 196]],\n  ['black', [0, 0, 0]],\n  ['blanchedalmond', [255, 235, 205]],\n  ['blue', [0, 0, 255]],\n  ['blueviolet', [138, 43, 226]],\n  ['brown', [165, 42, 42]],\n  ['burlywood', [222, 184, 135]],\n  ['cadetblue', [95, 158, 160]],\n  ['chartreuse', [127, 255, 0]],\n  ['chocolate', [210, 105, 30]],\n  ['coral', [255, 127, 80]],\n  ['cornflowerblue', [100, 149, 237]],\n  ['cornsilk', [255, 248, 220]],\n  ['crimson', [237, 20, 61]],\n  ['cyan', [0, 255, 255]],\n  ['darkblue', [0, 0, 139]],\n  ['darkcyan', [0, 139, 139]],\n  ['darkgoldenrod', [184, 134, 11]],\n  ['darkgray', [169, 169, 169]],\n  ['darkgrey', [169, 169, 169]],\n  ['darkgreen', [0, 100, 0]],\n  ['darkkhaki', [189, 183, 107]],\n  ['darkmagenta', [139, 0, 139]],\n  ['darkolivegreen', [85, 107, 47]],\n  ['darkorange', [255, 140, 0]],\n  ['darkorchid', [153, 50, 204]],\n  ['darkred', [139, 0, 0]],\n  ['darksalmon', [233, 150, 122]],\n  ['darkseagreen', [143, 188, 143]],\n  ['darkslateblue', [72, 61, 139]],\n  ['darkslategray', [47, 79, 79]],\n  ['darkslategrey', [47, 79, 79]],\n  ['darkturquoise', [0, 206, 209]],\n  ['darkviolet', [148, 0, 211]],\n  ['deeppink', [255, 20, 147]],\n  ['deepskyblue', [0, 191, 255]],\n  ['dimgray', [105, 105, 105]],\n  ['dimgrey', [105, 105, 105]],\n  ['dodgerblue', [30, 144, 255]],\n  ['firebrick', [178, 34, 34]],\n  ['floralwhite', [255, 250, 240]],\n  ['forestgreen', [34, 139, 34]],\n  ['fuchsia', [255, 0, 255]],\n  ['gainsboro', [220, 220, 220]],\n  ['ghostwhite', [248, 248, 255]],\n  ['gold', [255, 215, 0]],\n  ['goldenrod', [218, 165, 32]],\n  ['gray', [128, 128, 128]],\n  ['grey', [128, 128, 128]],\n  ['green', [0, 128, 0]],\n  ['greenyellow', [173, 255, 47]],\n  ['honeydew', [240, 255, 240]],\n  ['hotpink', [255, 105, 180]],\n  ['indianred', [205, 92, 92]],\n  ['indigo', [75, 0, 130]],\n  ['ivory', [255, 255, 240]],\n  ['khaki', [240, 230, 140]],\n  ['lavender', [230, 230, 250]],\n  ['lavenderblush', [255, 240, 245]],\n  ['lawngreen', [124, 252, 0]],\n  ['lemonchiffon', [255, 250, 205]],\n  ['lightblue', [173, 216, 230]],\n  ['lightcoral', [240, 128, 128]],\n  ['lightcyan', [224, 255, 255]],\n  ['lightgoldenrodyellow', [250, 250, 210]],\n  ['lightgreen', [144, 238, 144]],\n  ['lightgray', [211, 211, 211]],\n  ['lightgrey', [211, 211, 211]],\n  ['lightpink', [255, 182, 193]],\n  ['lightsalmon', [255, 160, 122]],\n  ['lightseagreen', [32, 178, 170]],\n  ['lightskyblue', [135, 206, 250]],\n  ['lightslategray', [119, 136, 153]],\n  ['lightslategrey', [119, 136, 153]],\n  ['lightsteelblue', [176, 196, 222]],\n  ['lightyellow', [255, 255, 224]],\n  ['lime', [0, 255, 0]],\n  ['limegreen', [50, 205, 50]],\n  ['linen', [250, 240, 230]],\n  ['magenta', [255, 0, 255]],\n  ['maroon', [128, 0, 0]],\n  ['mediumaquamarine', [102, 205, 170]],\n  ['mediumblue', [0, 0, 205]],\n  ['mediumorchid', [186, 85, 211]],\n  ['mediumpurple', [147, 112, 219]],\n  ['mediumseagreen', [60, 179, 113]],\n  ['mediumslateblue', [123, 104, 238]],\n  ['mediumspringgreen', [0, 250, 154]],\n  ['mediumturquoise', [72, 209, 204]],\n  ['mediumvioletred', [199, 21, 133]],\n  ['midnightblue', [25, 25, 112]],\n  ['mintcream', [245, 255, 250]],\n  ['mistyrose', [255, 228, 225]],\n  ['moccasin', [255, 228, 181]],\n  ['navajowhite', [255, 222, 173]],\n  ['navy', [0, 0, 128]],\n  ['oldlace', [253, 245, 230]],\n  ['olive', [128, 128, 0]],\n  ['olivedrab', [107, 142, 35]],\n  ['orange', [255, 165, 0]],\n  ['orangered', [255, 69, 0]],\n  ['orchid', [218, 112, 214]],\n  ['palegoldenrod', [238, 232, 170]],\n  ['palegreen', [152, 251, 152]],\n  ['paleturquoise', [175, 238, 238]],\n  ['palevioletred', [219, 112, 147]],\n  ['papayawhip', [255, 239, 213]],\n  ['peachpuff', [255, 218, 185]],\n  ['peru', [205, 133, 63]],\n  ['pink', [255, 192, 203]],\n  ['plum', [221, 160, 221]],\n  ['powderblue', [176, 224, 230]],\n  ['purple', [128, 0, 128]],\n  ['rebeccapurple', [102, 51, 153]],\n  ['red', [255, 0, 0]],\n  ['rosybrown', [188, 143, 143]],\n  ['royalblue', [65, 105, 225]],\n  ['saddlebrown', [139, 69, 19]],\n  ['salmon', [250, 128, 114]],\n  ['sandybrown', [244, 164, 96]],\n  ['seagreen', [46, 139, 87]],\n  ['seashell', [255, 245, 238]],\n  ['sienna', [160, 82, 45]],\n  ['silver', [192, 192, 192]],\n  ['skyblue', [135, 206, 235]],\n  ['slateblue', [106, 90, 205]],\n  ['slategray', [112, 128, 144]],\n  ['slategrey', [112, 128, 144]],\n  ['snow', [255, 250, 250]],\n  ['springgreen', [0, 255, 127]],\n  ['steelblue', [70, 130, 180]],\n  ['tan', [210, 180, 140]],\n  ['teal', [0, 128, 128]],\n  ['thistle', [216, 191, 216]],\n  ['tomato', [255, 99, 71]],\n  ['turquoise', [64, 224, 208]],\n  ['violet', [238, 130, 238]],\n  ['wheat', [245, 222, 179]],\n  ['white', [255, 255, 255]],\n  ['whitesmoke', [245, 245, 245]],\n  ['yellow', [255, 255, 0]],\n  ['yellowgreen', [154, 205, 50]],\n  ['transparent', [0, 0, 0, 0]],\n];\n\nPlatform.DCHECK(() => {\n  return COLOR_TO_RGBA_ENTRIES.every(([nickname]) => nickname.toLowerCase() === nickname);\n}, 'All color nicknames must be lowercase.');\n\nexport const Nicknames = new Map(COLOR_TO_RGBA_ENTRIES);\n\nconst RGBAToNickname = new Map(\n    // Default opacity to 1 if the color only specified 3 channels\n    COLOR_TO_RGBA_ENTRIES.map(([nickname, [r, g, b, a = 1]]) => {\n      return [String([r, g, b, a]), nickname];\n    }),\n);\n\nconst LAYOUT_LINES_HIGHLIGHT_COLOR = [127, 32, 210];\n\nexport const PageHighlight = {\n  Content: Legacy.fromRGBA([111, 168, 220, .66]),\n  ContentLight: Legacy.fromRGBA([111, 168, 220, .5]),\n  ContentOutline: Legacy.fromRGBA([9, 83, 148]),\n  Padding: Legacy.fromRGBA([147, 196, 125, .55]),\n  PaddingLight: Legacy.fromRGBA([147, 196, 125, .4]),\n  Border: Legacy.fromRGBA([255, 229, 153, .66]),\n  BorderLight: Legacy.fromRGBA([255, 229, 153, .5]),\n  Margin: Legacy.fromRGBA([246, 178, 107, .66]),\n  MarginLight: Legacy.fromRGBA([246, 178, 107, .5]),\n  EventTarget: Legacy.fromRGBA([255, 196, 196, .66]),\n  Shape: Legacy.fromRGBA([96, 82, 177, 0.8]),\n  ShapeMargin: Legacy.fromRGBA([96, 82, 127, .6]),\n  CssGrid: Legacy.fromRGBA([0x4b, 0, 0x82, 1]),\n  LayoutLine: Legacy.fromRGBA([...LAYOUT_LINES_HIGHLIGHT_COLOR, 1]),\n  GridBorder: Legacy.fromRGBA([...LAYOUT_LINES_HIGHLIGHT_COLOR, 1]),\n  GapBackground: Legacy.fromRGBA([...LAYOUT_LINES_HIGHLIGHT_COLOR, .3]),\n  GapHatch: Legacy.fromRGBA([...LAYOUT_LINES_HIGHLIGHT_COLOR, .8]),\n  GridAreaBorder: Legacy.fromRGBA([26, 115, 232, 1]),\n};\n\nexport const SourceOrderHighlight = {\n  ParentOutline: Legacy.fromRGBA([224, 90, 183, 1]),\n  ChildOutline: Legacy.fromRGBA([0, 120, 212, 1]),\n};\n\nexport const IsolationModeHighlight = {\n  Resizer: Legacy.fromRGBA([222, 225, 230, 1]),  // --color-background-elevation-2\n  ResizerHandle: Legacy.fromRGBA([166, 166, 166, 1]),\n  Mask: Legacy.fromRGBA([248, 249, 249, 1]),\n};\n\nexport class Generator {\n  readonly #hueSpace: number|{\n    min: number,\n    max: number,\n    count: (number|undefined),\n  };\n  readonly #satSpace: number|{\n    min: number,\n    max: number,\n    count: (number|undefined),\n  };\n  readonly #lightnessSpace: number|{\n    min: number,\n    max: number,\n    count: (number|undefined),\n  };\n  readonly #alphaSpace: number|{\n    min: number,\n    max: number,\n    count: (number|undefined),\n  };\n  readonly #colors: Map<string, string>;\n  constructor(\n      hueSpace?: number|{\n        min: number,\n        max: number,\n        count: (number|undefined),\n      },\n      satSpace?: number|{\n        min: number,\n        max: number,\n        count: (number|undefined),\n      },\n      lightnessSpace?: number|{\n        min: number,\n        max: number,\n        count: (number|undefined),\n      },\n      alphaSpace?: number|{\n        min: number,\n        max: number,\n        count: (number|undefined),\n      }) {\n    this.#hueSpace = hueSpace || {min: 0, max: 360, count: undefined};\n    this.#satSpace = satSpace || 67;\n    this.#lightnessSpace = lightnessSpace || 80;\n    this.#alphaSpace = alphaSpace || 1;\n    this.#colors = new Map();\n  }\n\n  setColorForID(id: string, color: string): void {\n    this.#colors.set(id, color);\n  }\n\n  colorForID(id: string): string {\n    let color = this.#colors.get(id);\n    if (!color) {\n      color = this.generateColorForID(id);\n      this.#colors.set(id, color);\n    }\n    return color;\n  }\n\n  private generateColorForID(id: string): string {\n    const hash = Platform.StringUtilities.hashCode(id);\n    const h = this.indexToValueInSpace(hash, this.#hueSpace);\n    const s = this.indexToValueInSpace(hash >> 8, this.#satSpace);\n    const l = this.indexToValueInSpace(hash >> 16, this.#lightnessSpace);\n    const a = this.indexToValueInSpace(hash >> 24, this.#alphaSpace);\n    const start = `hsl(${h}deg ${s}% ${l}%`;\n    if (a !== 1) {\n      return `${start} / ${Math.floor(a * 100)}%)`;\n    }\n    return `${start})`;\n  }\n\n  private indexToValueInSpace(index: number, space: number|{\n    min: number,\n    max: number,\n    count: (number|undefined),\n  }): number {\n    if (typeof space === 'number') {\n      return space;\n    }\n    const count = space.count || space.max - space.min;\n    index %= count;\n    return space.min + Math.floor(index / (count - 1) * (space.max - space.min));\n  }\n}\n"]}