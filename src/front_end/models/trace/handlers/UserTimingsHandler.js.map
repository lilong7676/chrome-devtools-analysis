{"version":3,"file":"UserTimingsHandler.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/UserTimingsHandler.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Types from '../types/types.js';\n\nimport {HandlerState} from './types.js';\n\n/**\n * IMPORTANT!\n * See UserTimings.md in this directory for some handy documentation on\n * UserTimings and the trace events we parse currently.\n **/\nconst syntheticEvents: Types.TraceEvents.TraceEventSyntheticUserTiming[] = [];\n\nconst timingEvents: (Types.TraceEvents.TraceEventUserTimingBegin|Types.TraceEvents.TraceEventUserTimingEnd)[] = [];\n\ninterface UserTimingsData {\n  timings: readonly Types.TraceEvents.TraceEventSyntheticUserTiming[];\n}\nlet handlerState = HandlerState.UNINITIALIZED;\n\nexport function reset(): void {\n  syntheticEvents.length = 0;\n  timingEvents.length = 0;\n  handlerState = HandlerState.INITIALIZED;\n}\n\nexport function handleEvent(event: Types.TraceEvents.TraceEventData): void {\n  if (handlerState !== HandlerState.INITIALIZED) {\n    throw new Error('UserTimings handler is not initialized');\n  }\n\n  if (Types.TraceEvents.isTraceEventUserTimingsBeginOrEnd(event)) {\n    timingEvents.push(event);\n  }\n}\n\nexport async function finalize(): Promise<void> {\n  if (handlerState !== HandlerState.INITIALIZED) {\n    throw new Error('UserTimings handler is not initialized');\n  }\n\n  const matchedEvents: Map<string, {\n    begin: Types.TraceEvents.TraceEventUserTimingBegin | null,\n    end: Types.TraceEvents.TraceEventUserTimingEnd | null,\n  }> = new Map();\n  for (const event of timingEvents) {\n    const otherEventsWithID = Platform.MapUtilities.getWithDefault(matchedEvents, event.id, () => {\n      return {begin: null, end: null};\n    });\n    const isStartEvent = event.ph === Types.TraceEvents.TraceEventPhase.ASYNC_NESTABLE_START;\n    const isEndEvent = event.ph === Types.TraceEvents.TraceEventPhase.ASYNC_NESTABLE_END;\n\n    if (isStartEvent) {\n      otherEventsWithID.begin = event;\n    } else if (isEndEvent) {\n      otherEventsWithID.end = event;\n    }\n  }\n\n  for (const [id, eventsPair] of matchedEvents.entries()) {\n    if (!eventsPair.begin || !eventsPair.end) {\n      // This should never happen, the backend only creates the events once it\n      // has them both, so we should never get into this state.\n      // If we do, something is very wrong, so let's just drop that problematic event.\n      continue;\n    }\n\n    const event: Types.TraceEvents.TraceEventSyntheticUserTiming = {\n      cat: eventsPair.end.cat,\n      ph: eventsPair.end.ph,\n      pid: eventsPair.end.pid,\n      tid: eventsPair.end.tid,\n      id,\n      // Both events have the same name, so it doesn't matter which we pick to\n      // use as the description\n      name: eventsPair.begin.name,\n      dur: Types.Timing.MicroSeconds(eventsPair.end.ts - eventsPair.begin.ts),\n      ts: eventsPair.begin.ts,\n      args: {\n        data: {\n          beginEvent: eventsPair.begin,\n          endEvent: eventsPair.end,\n        },\n      },\n    };\n    syntheticEvents.push(event);\n  }\n  syntheticEvents.sort((event1, event2) => {\n    if (event1.ts > event2.ts) {\n      return 1;\n    }\n    if (event2.ts > event1.ts) {\n      return -1;\n    }\n    return 0;\n  });\n  handlerState = HandlerState.FINALIZED;\n}\n\nexport function data(): UserTimingsData {\n  if (handlerState !== HandlerState.FINALIZED) {\n    throw new Error('UserTimings handler is not finalized');\n  }\n\n  return {\n    timings: [...syntheticEvents],\n  };\n}\n"]}